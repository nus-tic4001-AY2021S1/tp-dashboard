[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    mainClassName \u003d \"seedu.duke.NusExpenses\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  manifest {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    attributes("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "      \"Class-Path\": configurations.compile.collect { it.getName() }.join(\u0027 \u0027))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "adi-kd0021": 8
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Adi-Kesava Das | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Olivier Cheah | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0261618"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Yi | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Hngoi Zi Wen | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0261618"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chi Lai Ping  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "e0261618": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Big hello to Nus Expenses Tracker(NET). NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2. Download the latest NusExpensesTracker.jar from [here](\u003clinks\u003e)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Nus Expenses Tracker Application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0261618"
        },
        "content": "4. Open a command window in that folder."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0261618"
        },
        "content": "5. Run the command java -jar NusExpensesTracker.jar to open up the applcation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0261618"
        },
        "content": "6. Type the command in the command box and press Enter to execute it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## Features (v1.0)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Add: transactions with any date/time attached to it e.g., add breakfast $5.00 10 Oct 2020 \u003cbr/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Total: total transactions amount will be displayed e.g., The total amount you have spent so far is $13.90 \u003cbr/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Delete: delete transactions that you specified \u003cbr/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0261618"
        },
        "content": "View: list down all the transactions that has been added \u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Search: find keywords in the transactions \u003cbr/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: add \u003cdescription\u003e\u003camount\u003e\u003cdate\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: add lime juice $1.80 10 Oct 2020 \u003cbr/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0261618"
        },
        "content": "New transaction added\u003cbr/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Total"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: total  \u003cbr/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: total \u003cbr/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1.  Date: lunch Description: 3.5 Amount: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2.  Date: lime juice Description: 1.8 Amount: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "3.  Date: dinner Description: 5.6 Amount: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0261618"
        },
        "content": "The total amount you have spent so far is $10.90 \u003cbr/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: delete {index number} - The index must be a positive integer 1, 2, 3,(...) \u003cbr/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: delete 1 \u003cbr/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Transaction deleted. \u003cbr/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### View"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: list \u003cbr/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: list \u003cbr/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1.  Date: lunch Description: 3.5 Amount: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2.  Date: lime juice Description: 1.8 Amount: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0261618"
        },
        "content": "3.  Date: dinner Description: 5.6 Amount: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Search"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: search {keyword} \u003cbr/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: find lime juice \u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## Saving the data \u003cbr/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Data/NusExpensesTracker.txt is the directory where you can find the list of transactions being saved. \u003cbr/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Support or Contact \u003cbr/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Having trouble with executing the program? Email the team [here](e0261618@u.nus.edu) and We\u0027ll help you sort it out. "
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "e0261618": 58
    }
  },
  {
    "path": "src/main/java/seedu/duke/NusExpenses.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.storage.Storage.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyBudget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class NusExpenses {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // Version info of the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String VERSION \u003d \"NUS Expenses Tracker - Version 1.0\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //private Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private TransactionList transactionList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private BudgetList budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private List\u003c? extends ReadOnlyBudget\u003e lastShownBudgetList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static void main(String... args) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        //Start the Expense Tracker."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        new NusExpenses().run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        runLoopTillIssuedExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Setup and prints the welcome message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            this.storage \u003d initializeStorage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            this.transactionList \u003d storage.load();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showWelcomeMessage(VERSION);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (InvalidStorageFilePathException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IllegalValueException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Prints the Goodbye messages and exits."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void runLoopTillIssuedExit() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            String userCommandText \u003d ui.readUserCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            command.setBudgetData(budgetList, lastShownBudgetList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            recordResult(result);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showResultToUser(result);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void recordResult(CommandResult result) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Optional\u003cList\u003c? extends ReadOnlyTransaction\u003e\u003e transactionList \u003d result.getRelevantTransactions();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (transactionList.isPresent()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            lastShownList \u003d transactionList.get();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            storage.save(transactionList);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showToUser(\"An error has occurred! Please reach out to Proj Team @https://ay2021s1-tic4001-4.github.io/tp/AboutUs.html\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showToUser(e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Storage initializeStorage() throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new Storage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 7,
      "skyventus": 21,
      "timmyly7": 18,
      "-": 7,
      "adi-kd0021": 62
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class AddBudgetCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budgetadd\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"New Budget has been Added\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \": Adds a budget to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Parameters: CATEGORY DESCRIPTION $AMOUNT\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \" daily/food $20.00\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private final Budget toAdd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public AddBudgetCommand(String category, String description, double amount) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.toAdd \u003d new Budget(category, description, amount);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            budgetList.addBudget(toAdd);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New transaction added.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": Adds a transaction to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Parameters: DESCRIPTION $AMOUNT DATE...\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \" Lunch at Com2 $4.50 14-Oct-2020\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final Transaction toAdd;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public AddCommand(String description, double amount,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                      Date date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.toAdd \u003d new Transaction(description, amount, date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            transactionList.addTransaction(toAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 23,
      "adi-kd0021": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyBudget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    protected TransactionList transactionList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    protected List\u003c? extends ReadOnlyTransaction\u003e readOnlyTransaction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private int targetIndex \u003d -1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected BudgetList budgetList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected List\u003c? extends ReadOnlyBudget\u003e readOnlyBudget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.setTargetIndex(targetIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static String getMessageForTransactionListShownSummary("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        List\u003c? extends ReadOnlyTransaction\u003e transactionsDisplayed) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return String.format(Constants.MESSAGE_PERSONS_LISTED_OVERVIEW, transactionsDisplayed.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    protected ReadOnlyTransaction getTargetTransaction() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        return transactionList.getTransactionList().get(--targetIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setData(TransactionList transactionList, List\u003c? extends ReadOnlyTransaction\u003e readOnlyTransactions) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.transactionList \u003d transactionList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.readOnlyTransaction \u003d readOnlyTransactions;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public int getTargetIndex() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return targetIndex;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Executes the command for Budget and returns the result."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected ReadOnlyBudget getTargetBudget() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return budgetList.getBudgetList().get(--targetIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setBudgetData(BudgetList budgetList, List\u003c? extends ReadOnlyBudget\u003e readOnlyBudget) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.readOnlyBudget \u003d readOnlyBudget;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 16,
      "timmyly7": 14,
      "adi-kd0021": 37,
      "e0261618": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * The feedback message to be shown to the user. Contains a description of the execution result."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final List\u003c? extends ReadOnlyTransaction\u003e transaction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        transaction \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult(String feedbackToUser, List\u003c? extends ReadOnlyTransaction\u003e transaction) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.transaction \u003d transaction;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Optional\u003cList\u003c? extends ReadOnlyTransaction\u003e\u003e getRelevantTransactions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return Optional.ofNullable(transaction);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 4,
      "adi-kd0021": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String MESSAGE_DELETE_TRANSACTION_SUCCESS \u003d \"Transaction deleted.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": Deletes a transaction from the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Parameters: INDEX_OF_TRANSACTION_IN_LIST...\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \" 2\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public DeleteCommand(int targetIndex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        super(targetIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            final ReadOnlyTransaction target \u003d getTargetTransaction();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            transactionList.removeTransaction(target);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DELETE_TRANSACTION_SUCCESS, target));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(\"Out of index\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (TransactionList.TransactionNotFound transactionNotFound) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(\"Transaction Not found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 4,
      "adi-kd0021": 8,
      "e0261618": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting NUS Expenses Tracker as requested ...\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 18,
      "adi-kd0021": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                AddCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + AddCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + DeleteCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + SearchCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ViewCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + TotalCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + AddBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ViewBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + HelpCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ExitCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 2,
      "timmyly7": 6,
      "adi-kd0021": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 4,
      "adi-kd0021": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/SearchCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"search\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": Search for transaction(s) in the NUS Expenses Tracker using a single keyword\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Parameters: KEYWORD...\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \" lunch\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public SearchCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new String(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final List\u003cReadOnlyTransaction\u003e transactionsFound \u003d getTransactionsWithNameContainingKeyword(keyword);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult(getMessageForTransactionListShownSummary(transactionsFound), transactionsFound);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private List\u003cReadOnlyTransaction\u003e getTransactionsWithNameContainingKeyword(String keyword) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final List\u003cReadOnlyTransaction\u003e matchedTransactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (ReadOnlyTransaction transaction : transactionList.getTransactionList()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if (transaction.getDescription().toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                matchedTransactions.add(transaction);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return matchedTransactions;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 1,
      "timmyly7": 2,
      "adi-kd0021": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/TotalCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TotalCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"total\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            + \": Displays all the transaction in the Expenses Application as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return \"TotalCommand{}\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        double totalAmount \u003d 0.00;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        List\u003cTransaction\u003e allTransactions \u003d transactionList.getTransactionList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        for (Transaction transaction : allTransactions) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            totalAmount \u003d totalAmount + transaction.getAmount();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                String.format(\"The total amount you have spent so far is $%.2f\", totalAmount),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                allTransactions);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 22,
      "timmyly7": 5,
      "adi-kd0021": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/UpdateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Transaction updated.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"update\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \": Update a transaction to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"Parameters: INDEX DESCRIPTION $AMOUNT DATE...\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"update 1 /a 5 /u Dinner /d 2020-09-02\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final Transaction toUpdate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public UpdateCommand(int index, String description, double amount,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                         Date date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        setTargetIndex(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.toUpdate \u003d new Transaction(description, amount, date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            transactionList.updateTransaction(toUpdate, getTargetIndex());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toUpdate));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ViewBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class ViewBudgetCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budgetview\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Above are all budgets entered.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \": View a list of budgets added to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        List\u003cBudget\u003e allBudgets \u003d budgetList.getBudgetList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for (Budget budget: allBudgets) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(\"[\\\\\\\\]\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + count  + \".\" + budget.getCategory() + \" \" + budget.getDescription() + \" \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                            + budget.getAmount());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Above are all transaction entered.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": View a list of transactions added to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        List\u003cTransaction\u003e allTransactions \u003d transactionList.getTransactionList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for (Transaction transaction : allTransactions) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            output.append(count + \".\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                output.append(Parser.sdf.format(transaction.getDate()) + \" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            output.append(transaction.getDescription() + \" \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + transaction.getAmount());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            System.out.println(output.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 19,
      "timmyly7": 11,
      "adi-kd0021": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Constants.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"See you again soon. Good bye!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Welcome to NUS Expenses Tracker!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\\n%1$s\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d transactions listed!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_COMMAND_LIST \u003d \"\\nadd \u003cKEYWORD\u003e  $\u003cAMOUNT\u003e \u003cDATE\u003e[optional]\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\nsearch \u003cKEYWORD\u003e\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\nshow\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\ndelete \u003cINDEX\u003e\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\ndisplay\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String UPDATE_COMMAND_AMOUNT_PARAM \u003d \"/a\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String UPDATE_COMMAND_DATE_PARAM \u003d \"/d\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String UPDATE_COMMAND_USAGE_PARAM \u003d \"/u\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 3,
      "adi-kd0021": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Budget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Budget implements ReadOnlyBudget {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Budget(String category, String description, double amount) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setAmount(int amount) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setDCategory(String category) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/BudgetList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class BudgetList implements Iterable\u003cBudget\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private final List\u003cBudget\u003e internalBudgetList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.internalBudgetList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetList(List\u003cBudget\u003e listOfBudget) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.internalBudgetList \u003d listOfBudget;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public List\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        List\u003cBudget\u003e list \u003d internalBudgetList.stream().collect(Collectors.toList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        internalBudgetList.add(budget);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void removeBudget(ReadOnlyBudget toRemove) throws BudgetList.BudgetNotFound {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        internalBudgetList.remove(toRemove);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Iterator\u003cBudget\u003e iterator() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return internalBudgetList.iterator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static class BudgetNotFound extends Exception {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ReadOnlyBudget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public interface ReadOnlyBudget {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    double getAmount();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    String getCategory();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    default String getAsTextShowAll() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\"Category: \")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getCategory());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\" Description: \")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\" Amount: $\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getAmount());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ReadOnlyTransaction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public interface ReadOnlyTransaction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    double getAmount();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    Date getDate();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    void setAmount(double amount);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    void setDescription(String description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    void setDate(Date date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    default String getAsTextShowAll() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        builder.append(\" Description: \")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                .append(getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        builder.append(\" Amount: $\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                .append(getAmount());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        builder.append(\" Date: \")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                .append(getDate());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 14,
      "timmyly7": 9,
      "adi-kd0021": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Transaction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Transaction implements ReadOnlyTransaction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public Transaction(String description, double amount, Date date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setDate(Date date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 3,
      "timmyly7": 9,
      "adi-kd0021": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/TransactionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class TransactionList implements Iterable\u003cTransaction\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private final List\u003cTransaction\u003e internalTransactionList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public TransactionList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.internalTransactionList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TransactionList(List\u003cTransaction\u003e listOfTransaction) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.internalTransactionList \u003d listOfTransaction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public List\u003cTransaction\u003e getTransactionList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        List\u003cTransaction\u003e list \u003d internalTransactionList.stream().collect(Collectors.toList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void addTransaction(Transaction transaction) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        internalTransactionList.add(transaction);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public void removeTransaction(ReadOnlyTransaction toRemove) throws TransactionNotFound {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        internalTransactionList.remove(toRemove);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void updateTransaction(ReadOnlyTransaction toUpdate, int index) throws TransactionNotFound {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        ReadOnlyTransaction target \u003d internalTransactionList.get(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (toUpdate.getAmount() \u003e 0.0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            target.setAmount(toUpdate.getAmount());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (!toUpdate.getDescription().isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            target.setDescription(toUpdate.getDescription());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (toUpdate.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            target.setDate(toUpdate.getDate());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Iterator\u003cTransaction\u003e iterator() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return internalTransactionList.iterator();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static class TransactionNotFound extends Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 10,
      "skyventus": 5,
      "timmyly7": 17,
      "adi-kd0021": 19,
      "e0261618": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/IllegalValueException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ProcessingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ProcessingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public ProcessingException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Default file path used if the user doesn\u0027t provide the file name."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String DEFAULT_FILENAME \u003d \"mytransaction.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String DEFAULT_FILE_DIRECTORY \u003d \"expenses\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String fileDirectory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.fileDirectory \u003d DEFAULT_FILE_DIRECTORY;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        File directory \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filePath \u003d directory.getAbsolutePath() + \"\\\\\" + DEFAULT_FILENAME;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Storage(String fileDirectory, String fileName) throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filePath \u003d fileName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.fileDirectory \u003d fileDirectory;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!isValidFilePath(fileName)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void save(TransactionList transactionsList) throws StorageOperationException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            List\u003cString\u003e encodedTransactionList \u003d TransactionListEncoded.encodeTransactionList(transactionsList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            for (String s : encodedTransactionList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                fw.write(s);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Returns true if the given path is acceptable as a storage file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * The file path is considered acceptable if it ends with \u0027.txt\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static boolean isValidFilePath(String filePath) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return filePath.endsWith(\".txt\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TransactionList load() throws IllegalValueException, InterruptedException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!Files.exists(Paths.get(filePath))"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                || !Files.isRegularFile(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return new TransactionList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return TransactionListDecoded.decodeTransactions(Files.readAllLines(Paths.get(filePath)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IllegalValueException | IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new IllegalValueException(\"File contains illegal data values; data type constraints not met\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Signals that the given file path does not fulfill the storage filepath constraints."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public class InvalidStorageFilePathException extends IllegalValueException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        public InvalidStorageFilePathException(String message) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Signals that some error has occured while trying to convert and read/write data between the application"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * and the storage file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 104
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/TransactionListDecoded.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionListDecoded {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static TransactionList decodeTransactions(List\u003cString\u003e encodedTransactions)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throws IllegalValueException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final List\u003cTransaction\u003e decodedTransaction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        for (String encodedTransaction : encodedTransactions) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            decodedTransaction.add(decodeTransactionFromString(encodedTransaction));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new TransactionList(decodedTransaction);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static Transaction decodeTransactionFromString(String transactionText) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String[] transactionSplit \u003d transactionText.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String date \u003d transactionSplit[0].equals(\"-\") ? \"\" : transactionSplit[0].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String description \u003d transactionText.substring("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    transactionText.indexOf(transactionSplit[1]), transactionText.indexOf(\"$\") - 1).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            double d \u003d Double.parseDouble(transactionText.substring(transactionText.indexOf(\"$\") + 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            double amount \u003d d;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new Transaction(description, amount, Parser.sdf.parse(date));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 29,
      "timmyly7": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/TransactionListEncoded.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionListEncoded {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Encodes all the {@code Person} in the {@code toSave} into a list of decodable and readable string presentation"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * for storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static List\u003cString\u003e encodeTransactionList(TransactionList toSave) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final List\u003cString\u003e encodedTransactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        toSave.getTransactionList().forEach(transaction -\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                encodedTransactions.add(encodedTransactionToString(transaction)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return encodedTransactions;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Encodes the {@code person} into a decodable and readable string representation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static String encodedTransactionToString(Transaction transaction) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final StringBuilder encodedTransactionBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final DecimalFormat df2 \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            encodedTransactionBuilder.append(Parser.sdf.format(transaction.getDate()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(transaction.getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\"$\" + df2.format(transaction.getAmount()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return encodedTransactionBuilder.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 35,
      "timmyly7": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/utilities/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.SearchCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.TotalCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.UpdateCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ViewCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.AddBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.ViewBudgetCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.common.Constants;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import static seedu.duke.common.Constants.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //public static final Pattern BASIC_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\",Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //public static final Pattern ADD_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // Pattern.compile(\"(?\u003cusage\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern BASIC_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern ADD_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Pattern.compile(\"(?\u003cdescription\u003e[^$]*)(?\u003camount\u003e\\\\${1}\\\\d+\\\\.?\\\\d{0,2})(?\u003cdate\u003e.*)\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final Pattern UPDATE_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            Pattern.compile(\"(?\u003cindex\u003e^\\\\d$)(?\u003cusage\u003e^\\\\\\\\d$)(?\u003cdate\u003e.*)\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern SEARCH_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Pattern.compile(\"(?\u003ckeyword\u003e^[a-zA-Z0-9_]+$)\",Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final Pattern ADDBUDGET_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Pattern.compile(\"(?\u003ccategory\u003e[^/]*)(?\u003cdescription\u003e[^$]*)(?\u003camount\u003e\\\\${1}\\\\d+\\\\.?\\\\d{0,2})\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return prepareAdd(arguments);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return createDeleteCommand(arguments);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case SearchCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return prepareSearchCommand(arguments);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case TotalCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return createTotalCommand(arguments);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return createViewCommand(arguments);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        case AddBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return createAddBudgetCommand(arguments);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        case ViewBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return createViewBudgetCommand(arguments);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case UpdateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return prepareUpdate(arguments);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case HelpCommand.COMMAND_WORD: // Fallthrough"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //    private Command createAddCommand(String args) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        Command finalCommand;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        String usage \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        Double amount \u003d 0.0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        String date \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            usage \u003d args.split(\"\\\\$\")[0];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            String amount1 \u003d args.substring(args.indexOf(\"$\") + 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            String everythingAfterSign \u003d amount1.trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            if (everythingAfterSign.indexOf(\" \") !\u003d -1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //                amount1 \u003d everythingAfterSign.split(\" \")[0];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //                date \u003d everythingAfterSign.split(\" \")[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            amount \u003d Double.parseDouble(amount1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            finalCommand \u003d new AddCommand(usage, amount, date);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            e.printStackTrace();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //            finalCommand \u003d new IncorrectCommand(\"createAddCommand\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //        return finalCommand;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private Command prepareAdd(String args) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Matcher matcher \u003d ADD_COMMAND_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        // Validate arg string format"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Add Command\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            String dateString \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            Date date \u003d null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (!dateString.isEmpty()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                date \u003d sdf.parse(dateString);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new AddCommand("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    matcher.group(\"description\").trim(),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    Double.parseDouble(matcher.group(\"amount\").replace(\"$\", \"\")),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    date"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            );"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command createDeleteCommand(String args) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            int index \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            finalCommand \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect Delete Command\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private Command prepareSearchCommand(String args) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Matcher matcher \u003d SEARCH_COMMAND_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Search Command\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new SearchCommand("
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    matcher.group(\"keyword\").trim()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command createTotalCommand(String args) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            finalCommand \u003d new TotalCommand();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect Total Command\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command createViewCommand(String args) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            finalCommand \u003d new ViewCommand();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect View Command\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command prepareUpdate(String args) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String usage \u003d \"\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        double amount \u003d 0.0;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            final Integer index \u003d Integer.parseInt(args.trim().split(\" \")[0]);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_AMOUNT_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_AMOUNT_PARAM) + 2);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                amount \u003d Double.parseDouble(temp.trim());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_DATE_PARAM) + 2);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                date \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_USAGE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_USAGE_PARAM) + 2);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                usage \u003d temp;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new UpdateCommand(index, usage, amount, date);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Command createAddBudgetCommand(String args) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final Matcher matcher \u003d ADDBUDGET_COMMAND_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        // Validate arg string format"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Add Command\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new AddBudgetCommand("
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    matcher.group(\"category\").trim(),"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    matcher.group(\"description\").trim(),"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    Double.parseDouble(matcher.group(\"amount\").replace(\"$\", \"\"))"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            );"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  "
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Command createViewBudgetCommand(String args) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new ViewBudgetCommand();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect View Budget Command\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 50,
      "skyventus": 2,
      "timmyly7": 133,
      "adi-kd0021": 69,
      "e0261618": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/utilities/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adi-kd0021": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/utilities/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import static seedu.duke.common.Constants.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import static seedu.duke.common.Constants.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Display / Show to user stuffs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Decorative prefix."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"[\\\\\\\\]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // A platform independent line separator."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Offset to use 1-indexing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // Format of indexed list item."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String DIVIDER \u003d \"***************************************************\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showWelcomeMessage(String version) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        //String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                DIVIDER,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                DIVIDER,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                MESSAGE_WELCOME,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                version,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                DIVIDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Read in the next input line."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        out.print(LINE_PREFIX + \"Input command: \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        String fullLineInput \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(\"[Command entered:\" + fullLineInput + \"]\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return fullLineInput;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Close the inputstream."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void endInputFeed() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Optional\u003cList\u003c? extends ReadOnlyTransaction\u003e\u003e resultTransaction \u003d result.getRelevantTransactions();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (resultTransaction.isPresent()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            showTransactionListView(resultTransaction.get());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(DIVIDER, result.feedbackToUser, DIVIDER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Shows a list of persons to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Private contact details are hidden."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void showTransactionListView(List\u003c? extends ReadOnlyTransaction\u003e transactions) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final List\u003cString\u003e formattedTransaction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (ReadOnlyTransaction transaction : transactions) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            formattedTransaction.add(transaction.getAsTextShowAll());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUserAsIndexedList(formattedTransaction);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Shows a list of strings to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void showToUserAsIndexedList(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(getIndexedListForViewing(list));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Formats a list of strings as a viewable indexed list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (String listItem : listItems) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            displayIndex++;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return formatted.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Formats a string as a viewable indexed list item."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * @param visibleIndex visible index for this listing"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static String getIndexedListItem(int visibleIndex, String listItem) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 4,
      "adi-kd0021": 133
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.ViewCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import javax.swing.text.View;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 9,
      "-": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString \u003d \"Add lunch $4.00 2020-09-20\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_add() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command \u003d new Parser().parseCommand(commandString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result \u003d command.execute().feedbackToUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"New transaction added.\", result);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 46
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/DeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void execute_delete() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(3, command.transactionList.getTransactionList().size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        DeleteCommand command2 \u003d new DeleteCommand(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(2, command.transactionList.getTransactionList().size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void execute_delete_withWrongIndex() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(5);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Out of index\", command.execute().feedbackToUser);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 44
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/SearchCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class SearchCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void searchCommand_Test() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        SearchCommand command \u003d new SearchCommand(\"chicken\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"1 transactions listed!\", command.execute().feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        SearchCommand command2 \u003d new SearchCommand(\"rice\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        command2.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"3 transactions listed!\", command2.execute().feedbackToUser);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 32
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/TotalCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TotalCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void execute_total() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        TotalCommand command \u003d new TotalCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"The total amount you have spent so far is $62.00\", command.execute().feedbackToUser);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 29
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/ViewCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ViewCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString \u003d \"view\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_view() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command \u003d new Parser().parseCommand(commandString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result \u003d command.execute().feedbackToUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"Above are all transaction entered.\", result);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 45
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/TransactionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Test list index 0 and 1 to get its description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transaction_getList_getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Chicken Rice\", transactionList.getTransactionList().get(0).getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Fried Rice\", transactionList.getTransactionList().get(1).getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Test list index 0 and 1 to get its amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transactionList_getList_getAmount() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(4.00, transactionList.getTransactionList().get(0).getAmount());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(15.00, transactionList.getTransactionList().get(1).getAmount());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Test removing index 0 transaction and assert the size."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transactionList_getList_removeTransaction() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ReadOnlyTransaction transactionToRemove \u003d transactionList.getTransactionList().get(0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            transactionList.removeTransaction(transactionToRemove);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            assertEquals(3, transactionList.getTransactionList().size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (TransactionList.TransactionNotFound transactionNotFound) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            assertEquals(\"\", transactionNotFound.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 42
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.SearchCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.TotalCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ViewCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command addCommand \u003d new AddCommand(\"lunch\", 4.00, new Date());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command deleteCommand \u003d new DeleteCommand(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command viewCommand \u003d new ViewCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command totalCommand \u003d new TotalCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String ADD_COMMAND_STRING \u003d \"Add lunch $4.00 2020-09-09\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String DELETE_COMMAND_STRING \u003d \"delete 1\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String VIEW_COMMAND_STRING \u003d \"view\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String TOTAL_COMMAND_STRING \u003d \"total\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String EXIT_COMMAND_STRING \u003d \"exit\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String HELP_COMMAND_STRING \u003d \"help\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String SEARCH_COMMAND_STRING \u003d \"search test\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_parser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getAddCommand \u003d new Parser().parseCommand(ADD_COMMAND_STRING);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getDeleteCommand \u003d new Parser().parseCommand(DELETE_COMMAND_STRING);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getViewCommand \u003d new Parser().parseCommand(VIEW_COMMAND_STRING);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getTotalCommand \u003d new Parser().parseCommand(TOTAL_COMMAND_STRING);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getExitCommand \u003d new Parser().parseCommand(EXIT_COMMAND_STRING);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getHelpCommand \u003d new Parser().parseCommand(HELP_COMMAND_STRING);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getSearchCommand \u003d new Parser().parseCommand(SEARCH_COMMAND_STRING);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getAddCommand instanceof AddCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getDeleteCommand instanceof DeleteCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getViewCommand instanceof ViewCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getTotalCommand instanceof TotalCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getExitCommand instanceof ExitCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getHelpCommand instanceof HelpCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getSearchCommand instanceof SearchCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 53
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/SetupTransactionData.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Class to generate typical test test."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class SetupTransactionData {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData3;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d new TransactionList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public SetupTransactionData() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.transactionData1 \u003d new Transaction(\"Chicken Rice\", 4.00, null);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.transactionData2 \u003d new Transaction(\"Fried Rice\", 15.00, null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.transactionData3 \u003d new Transaction(\"MSG Rice\", 20.00, null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.transactionData4 \u003d new Transaction(\"Fish Curry Noodle\", 23.00, null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TransactionList loadTransactionData() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            for (Transaction t : getTransactionData()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                this.transactionList.addTransaction(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return this.transactionList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            assert false : \"Error encountered\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return this.transactionList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Transaction[] getTransactionData() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new Transaction[]{transactionData1, transactionData2, transactionData3, transactionData4};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 38,
      "timmyly7": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "adi-kd0021": 1
    }
  }
]
