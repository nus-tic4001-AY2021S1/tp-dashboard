[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    compile group: \u0027org.apache.poi\u0027, name: \u0027poi-ooxml\u0027, version: \u00274.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    compile group: \u0027org.apache.poi\u0027, name: \u0027poi\u0027, version: \u00274.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    mainClassName \u003d \"seedu.duke.NusExpenses\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  manifest {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    attributes("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "      \"Class-Path\": configurations.compile.collect { it.getName() }.join(\u0027 \u0027))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 1,
      "-": 46,
      "adi-kd0021": 7,
      "e0261618": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Adi-Kesava Das | [adi-kd0021](https://github.com/adi-kd0021) | [Portfolio](team/adi-kd0021.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Olivier Cheah | [skyventus](https://github.com/skyventus) | [Portfolio](team/skyventus.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Li Yi | [timmyly7](https://github.com/timmyly7) | [Portfolio](team/timmyly7.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": "![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Hngoi Zi Wen | [e0261618](https://github.com/e0261618) | [Portfolio](team/e0261618.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "![](https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png) | Chi Lai Ping  | [Chilaiping](https://github.com/Chilaiping) | [Portfolio](team/chilaiping.md)"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 1,
      "-": 4,
      "adi-kd0021": 3,
      "e0261618": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* [Setting Up and Getting Started](#Setting-Up-and-Getting-Started)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* [Design](#Design)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Architecture](#Architecture)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [UI component](#Component)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Logic component](#Component)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Model component](#Component)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Storage component](#Storage-Component)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Common classes](#Component)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* [Implementation](#Implementation)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* [Appendix: Requirements](#Appendix:-Requirements)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Product scope](#Product-scope)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [User stories](#User-Stories)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Non-Functional Requirements](#Non-Functional-Requirements)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * [Glossary](#Glossary)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "## Setting Up and Getting Started"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ":heavy_exclamation_mark: **Caution** Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "First, **fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "If you plan to use Intellij IDEA (highly recommended):"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "1. **Configure the JDK:**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Ensure you have the correct JDK version installed in your computer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Open IntelliJ (if you are not in the welcome screen, click File → Close Project to close the existing project dialog first)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Set up the correct JDK version for Gradle."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Click Configure → Project Defaults → Project Structure"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Click New…​ and set it to the directory of the JDK."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "2. **Import the project as a Gradle project:**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * IntelliJ IDEA by default has the Gradle plugin installed. If you have disabled it, go to File → Settings → Plugins to re-enable them."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * If your project involves GUI programming, similarly ensure the JavaFX plugin has not been disabled."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Click Import Project (or Open or Import in newer version of Intellij)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Locate the `build.gradle` file (not the root folder as you would do in a normal importing) and select it. Click OK."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * If asked, choose to Open as Project (not Open as File)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Click OK to accept the default settings but do ensure that the selected version of Gradle JVM matches the JDK being used for the project."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Wait for the importing process to finish (could take a few minutes)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * :heavy_exclamation_mark: **Note**: Importing a Gradle project is slightly different from importing a normal Java project."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "3. **Verify the setup:**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Run the `NusExpenses.java` and try a few commands."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "## Design"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "##### Architecture"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Architecture](images/Architecture.png)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The ***Architecture Diagram*** shown gives an overview of the high-level design."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "`Main` has one class named `NusExpenses`. It would perform the following functions:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- At launch: Initialize the components in the correct sequence, and connect them up with each other."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- At shut down / Exit: Shuts down the components and invokes save / cleanup methods where necessary."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "`Constants` holds a collection of frequently used static messages used by multiple other components."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The application then consists of four other components:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- `UI`: The UI of NUS Expenses Tracker (NET)."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- `Logic`: The command executor. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- `Model`: Hold the data of NET in memory."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- `Storage`: Read data from, and writes data to the hard disk."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "One example would be the `Storage` component which defines its API in `Storage.java` as well as exposes its functionality using the same class."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "##### Component"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Component](images/TP-Design.png)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "##### Storage Component"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": "###### Storage(Load)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "![StorageComponent](images/storageDecodedDiagram.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "###### Storage(save)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": "![StorageComponent](images/storageEncodedDiagram.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "API:  ```Storage.java```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "The Storage Component,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Load function will read the text file and passing the list of string in the file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "to the decoding class. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Saving function will Encode the transaction detail and pass it back to storage"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": "to save to the file. "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The *Sequence Diagram* below shows how the components interact with each other in the scenario where the user issues the command ```search keyword```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "###### Search Command Sequence Diagram"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![SearchCommand Sequence Diagram](images/SearchSequenceDiagram.png)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The following *Object Diagram* gives an overview of which objects are accessed and associated with the execution of the `Search` command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "###### Search Command Object Diagram"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![SearchCommand Object Diagram](images/SearchCommandObjectDiagram.png)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The following *Sequence Diagram* shows how the components interact in the scenario where the user issues the `total` command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "###### Total Command Sequence Diagram"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sequence](images/TotalCommandSequence.png)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "The *Budget View Object Diagram* gives an overview of which objects are accessed and associated when the `budgetview` command is called, together with sample values for illustration "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "###### BudgetView Object Diagram"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "![Sequence](images/ViewBudgetObjectDiagram.png)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "The *Budget View Sequence Diagram* shows how does components interact with each other in the scenario when user issues `budgetview` command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "###### BudgetView Sequence Diagram"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "![Sequence](images/ViewBudgetSequenceDiagram.png)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "## Implementation"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "This section describes some noteworthy details on how certain features were implemented."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "##### Delete Feature"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The purpose of `Delete` function is to facilitate user to remove a transaction in the TransactionList if they made a mistake."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "It extends Command and TransactionList to get the correct index to remove."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Given below is an example usage scenario and how the `Report` mechanism behaves at each step."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Step 1. The user launches the application for the first time. The TransactionList is empty."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Stage1](images/ReportFeature_Stage1.png)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Step 2. User executes ```add Lunch at ...``` to add a new transaction. The ```add``` command will save the record into TransactionList. User will continue to add another 5 more records to the TransactionList. There are a total of 6 Transactions saved."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Stage2](images/DeleteFeature_Stage2.png)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Step 3. User executes ```delete 3``` command to delete the 3rd transaction in the Expenses Tracking Application. TransactionList will be left with 5 records after User delete successfully."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Stage3](images/DeleteFeature_Stage3.png)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "##### Report Feature"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The purpose of report feature is to facilitate user to be able to generate a summary report with all the expense details user entered. "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "It extends Command and TransactionList, get all the transactions and generate report with a time period."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Given below is an example usage scenario and how the report mechanism behaves at each step."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Step 1. The user launches the application for the first time. The TransactionList is empty."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Stage1](images/ReportFeature_Stage1.png)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Step 2. User executes ```add Lunch at ...``` to add a new transaction. The ```add``` command will save the record into TransactionList."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Stage2](images/ReportFeature_Stage2.png)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Step 3. After user enters multiple records in TransactionList, they will executes ```report /sd...``` command to generate the report with or without a time period."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Stage3](images/ReportFeature_Stage3.png)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "In step 3, the application used an external library named **\u0027Apache-POI\u0027**. This library helps to generate the summary report into an Excel file with the following format:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - CSV](images/CSV.JPG)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "The following activity diagram summarizes what happens when a user executes report command:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![Sample - Report Activity Diagram](images/Report%20Activity%20Diagram.png)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "## Appendix: Requirements"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "### Product scope"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "skyventus"
        },
        "content": "##### Target user profile"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Has a need to manage his/her expenses"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Is able to use command line interface (CLI)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Can type fast"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Prefers typing to interaction with a graphical user interface (GUI)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Is comfortable using CLI apps"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "skyventus"
        },
        "content": "##### Value proposition: "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "skyventus"
        },
        "content": "To manage all expenses faster than a typical excel budget spreadsheet."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "### User Stories"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "###### *Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`*"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|Priority|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|--------|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|exit the program|close the program|"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|add my daily expenses in the system|add the information into the system and keep track of my daily expenses|"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|view all my transactions by category in the system|be aware of what I have added|"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|remove my daily expense in the system|remove the transactions|"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|search for an expenses with keyword in the system|filter out the expenses that I want to see|"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v1.0|Student|see the total expense incurred in the system|be aware of my spending|"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v2.0|Student|update my expenses in the system|update the transactions|"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* * *`|v2.0|Student|Save all transactions to a readable text file and load from it|I can have a copy of transaction history.|"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* *`|v2.0|Student|categorize my daily expense in the system|better managed/view my expenses|"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* *`|v2.0|Student|add a budget in the system||"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* *`|v2.0|Student|delete a budget in the system||"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* *`|v2.0|Student|view the budget with respect to expenses in the system||"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* *`|v2.0|Student|view the transactions in the system with a specific time period|I can find the specific transaction more easily|"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`* *`|v2.0|Student|generate and export a transactions report summary with a specific time period|keep a copy and view them outside the system|"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`*`|v2.0|Student|make sure I input daily expenses|I can keep track of it|"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "|`*`|v2.0|Student|view tips on saving money|have motivation to achieve my goal|"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ":point_right: View [User Stories on our Trello Board](https://trello.com/b/2290RLsD/nusexpenseshelper \"User Stories on Trello~\")"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "### Use Cases"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "###### (For all use cases below, the System is the `NUS Expenses Tracker` and the Actor is the `NUS Student`)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "###### Use Case Diagram"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "![NUS Expenses Tracker - UC](images/NUSExpenseTrackerUCDiagram.png)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "### Non Functional Requirements"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "skyventus"
        },
        "content": "1. Should work on any mainstream OS as long it has Java ```11``` or above installed."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "skyventus"
        },
        "content": "2. User will be able to interact with the systems with regular english text. For example: (```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "skyventus"
        },
        "content": "add chicken rice $4.00 2020-11-01 /C FOOD. ```)."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "skyventus"
        },
        "content": "3. Will be able to handle up to 1000 expenses without noticeable slowness in performance for typical usage."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "skyventus"
        },
        "content": "4. User will be able to interact with their expenses.txt if they wish to make amendment. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "### Glossary"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- *MainStream OS* - Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- NET - NUS Expenses Tracker"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- Regex - Regular Expressions"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- JDK - Java Development Kit - [Java SE](https://www.oracle.com/sg/java/technologies/javase-downloads.html \"Java SE Downloads\")"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- Gradle - Gradle Build Tool - [Gradle User Manual](https://docs.gradle.org/current/userguide/userguide.html \"Build Automation Tool - Docs\")"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- Intellij / IDE - Intellij Integrated Development Environment - [IntelliJ IDEA](https://www.jetbrains.com/idea/ \"JVM IDE\") "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "- Plugin - IDE Plugins - [Intellij IDEA Plugins](https://www.jetbrains.com/help/idea/managing-plugins.html \"Manage plugins\")"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 8,
      "skyventus": 25,
      "-": 28,
      "adi-kd0021": 159,
      "e0261618": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Nus Expenses Tracker(NET)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "e0261618": 2
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Welcome to Nus Expenses Tracker(NET). NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "2. Download the latest NusExpensesTracker.jar from [here](https://github.com/AY2021S1-TIC4001-4/tp/releases)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "3. Copy the file to the directory you want to use as the home directory for your Nus Expenses Tracker Application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "4. Open a command prompt / terminal window in that directory."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "5. Run the command ```java -jar NusExpensesTracker.jar``` to open up the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "6. Type the ```help``` in the command box and press ```Enter``` to execute it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Help: Lists the commands the user can use to interact with the application. \u003cbr/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Add: Add Transactions with optional date/time or category. E.g., add breakfast $5.00 10 Oct 2020 /c Food\u003cbr/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Update: Update a transaction\u0027s attributes, description, amount, category...  \u003cbr/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Total: Display the sum total spent from all transactions. E.g. The total amount you have spent so far is $13.90 \u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Delete: Delete transactions a specified transaction \u003cbr/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "View: View transactions that have been added. \u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Search: Find transactions using a specified keyword. \u003cbr/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Add Budget: Add a Budget with optional date/time. E.g., budgetadd daily/food $20.00 \u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "View Budget: View all budgets that have been added. \u003cbr/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Generate Report: Export data into an Excel file (.xlsx) containing a summary of transactions with an optional specified time period. \u003cbr/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Exit: Exit NUSExpenses Tracker \u003cbr/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: help \u003cbr/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: help \u003cbr/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "add: Adds a transaction to the NUS Expenses Tracker."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Parameters: DESCRIPTION $AMOUNT DATE..."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: add Lunch at Com2 $4.50 14-Oct-2020"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: add \u003cdescription\u003e\u003camount\u003e\u003cdate\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: add lime juice $1.80 10 Oct 2020 \u003cbr/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0261618"
        },
        "content": "New transaction added\u003cbr/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Update"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: update \u003cindex\u003e /d \u003cdate\u003e(optional)/u \u003cusage\u003e(optional)/c \u003ccategory\u003e(optional)/a \u003camount\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: update 1 /u dinner /d 2020-09-24 /a $5.0 /c FOOD \u003cbr/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Transaction updated\u003cbr/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Total"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: total  \u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: total \u003cbr/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1.  Date: lunch Description: 3.5 Amount: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2.  Date: lime juice Description: 1.8 Amount: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0261618"
        },
        "content": "3.  Date: dinner Description: 5.6 Amount: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0261618"
        },
        "content": "The total amount you have spent so far is $10.90 \u003cbr/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: delete {index number} - The index must be a positive integer 1, 2, 3,(...) \u003cbr/\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: delete 1 \u003cbr/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Transaction deleted. \u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### View"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Format 1: view {category} \u003cbr/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Format 2: view /sd {date} /ed {date}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Format 3: view /sd {date}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Format 4: view /ed {date}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Example 1: view MISC \u003cbr/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1.  Description: lunch Amount: $3.0 Category: MISC"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2.  Description: dinner Amount: $4.0 Date: 2020-09-09 Category: MISC"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Displaying category: MISC "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Above are all transaction entered."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Example 2: view /sd 2020-09-08 /ed 2020-09-10 \u003cbr/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "1.  Description: dinner Amount: $4.0 Date: 2020-09-09 Category: MISC"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Displaying : 2020-09-08 - 2020-09-10"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Above are all transaction entered."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Example 3: view /sd 2020-09-08"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "1.  Description: dinner Amount: $4.0 Date: 2020-09-09 Category: MISC"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Displaying : Every Transaction After 2020-09-08"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Above are all transaction entered."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Example 4: view /ed 2020-09-10"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "1.  Description: dinner Amount: $4.0 Date: 2020-09-09 Category: MISC"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Displaying : Every Transaction Before 2020-09-10"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Above are all transaction entered."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Search"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: search {keyword} \u003cbr/\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Example: search dinner \u003cbr/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0261618"
        },
        "content": "1.  Description: dinner Amount: $4.0 Date: 2020-09-09 Category: MISC"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2.  Description:  dinner  Amount: $5.0 Date: 2020-09-24 Category: FOOD"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2 transactions listed!"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Add Budget"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Format: budgetadd {category} {/description} {amount}\u003cbr/\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Example: budgetadd daily /FOOD $20.00 \u003cbr/\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "New Budget has been added\u003cbr/\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### View Budget"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Format: budgetview \u003cbr/\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Example: budgetview \u003cbr/\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "CATEGORY: DAILY || DESCRIPTION: FOOD || Budget : $50.0 \u003cbr/\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " Current Spending TODAY for CATEGORY FOOD is $5.0 \u003cbr/\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " You expenses is on track. Good Job!"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Above are all budgets entered."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Generate Report"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Format: report /sd \u003cstart date\u003e(optional) /ed \u003cend date\u003e (optional)\u003cbr/\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "Example 1: report /sd 2020-09-28 /ed 2020-09-30 \u003cbr/\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "Example 2: report"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Output: \u003cbr/\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0261618"
        },
        "content": "Report exported successfully."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0261618"
        },
        "content": "***************************************************"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## Saving the data \u003cbr/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Saving is done  automatically after each command. It will be saved into the"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0261618"
        },
        "content": "expenses/mytransactions.txt is the directory where you can find the list of transactions being saved. \u003cbr/\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Support or Contact \u003cbr/\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "Having trouble with executing the program? Contact the team [here](https://ay2021s1-tic4001-4.github.io/tp/AboutUs.html) and We\u0027ll help you sort it out. "
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 11,
      "timmyly7": 2,
      "-": 3,
      "adi-kd0021": 45,
      "e0261618": 88
    }
  },
  {
    "path": "docs/team/adi-kd0021.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "# Adi-Kesava Das\u0027s - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "## Project: NUS Expenses Tracker (NET)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "### Contributions to the project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Initial Code Skeleton / Baseline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* New Feature: User Interface (UI)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * What it does: Provides a interface layer for the user to interact with. In this case, it handles the inputs from the user and displays outputs from the application to the user. Thus users respond to visual prompt and type a command on the specified line. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Justification: This feature is a must have for a command line application. It allows users to know when to input commands and respond accordingly with feedbacks from the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Credits: Logic and design adapted from addressbook-level2 ([TextUi](https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/ui/TextUi.java))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* New Feature: Regular Expressions (Regex) for different commands. E.g. Add, Update, Search, View, "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "([#21](https://github.com/AY2021S1-TIC4001-4/tp/pull/21), [#39](https://github.com/AY2021S1-TIC4001-4/tp/pull/39), "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "[#43](https://github.com/AY2021S1-TIC4001-4/tp/pull/43), [#45](https://github.com/AY2021S1-TIC4001-4/tp/pull/45))."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * What it does: User input is parsed and matched by Regex to determine the commands and arguments input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Justification: This method of pattern matching of a string allows for optional inputs as well as efficient parsing to isolate target arguments for processing. This also allows for good exception handling should the arugments supplied not match."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Credits: Some minor reference taken from addressbook-level2 ([Parser](https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java]))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* New Feature: Added a Search Function"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * What it does: allows the user to search for transactions with a specified keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Justification: This feature is required for the user to view past transactions in a more efficient manner."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * This function can be improved upon in future versions in order to allow more fine tuned searching of transaction records."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Credits: Logic and design adapted from addressbook-level2 ([FindCommand](https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/commands/FindCommand.java))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* New Feature: Added the Category Functionality "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * What it does: Allows for the user to specify the category for a transaction when adding and or modifying. ([#39](https://github.com/AY2021S1-TIC4001-4/tp/pull/39))."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Justification: This feature adds value by categorizing transactions with a String tag. This allows further sorting as well as a more insightful look at past transactions in order to understand why they had taken place.  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Code contributed: [RepoSense Link](https://nus-tic4001-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dadi-kd0021\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dadi-kd0021\u0026tabRepo\u003dAY2021S1-TIC4001-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": " "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Project management"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Managed releases ```v1.0``` - ```v3.0``` (3 releases) on Github"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": " "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Enhancements to existing features:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Enhanced the View functionality to allow filtering to display only transactions of a specified category"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Enhanced the Update functionality to allow updating of a transactions category."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Added documentation for the ```view``` ([#52](https://github.com/AY2021S1-TIC4001-4/tp/pull/52))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Added Component diagram"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Added plantUML Architecture.puml ([#67](https://github.com/AY2021S1-TIC4001-4/tp/pull/67))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Fixed UG and DG grammar, markdowns... ([#68](https://github.com/AY2021S1-TIC4001-4/tp/pull/68))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Added SearchCommand Sequence diagram ([#79](https://github.com/AY2021S1-TIC4001-4/tp/pull/79))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Added SearchCommand Object diagram "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    * Added NUS Expense Tracker Use Case diagram ([#84](https://github.com/AY2021S1-TIC4001-4/tp/pull/84))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Community:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Our application was developed using a combination of pair-programming and adhoc coding sessions. During each session lasting between an hour to four or more, all group members sat in a meeting session while coding/ implementing their assigned components. If a concern was raised or support was needed, they shared their screen via the meeting session and everyone participated or assisted to clear the obstacle. Using this method we\u0027ve successfully cleared v1.0 to v3.0 of our project milestones. "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "* Tools"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * All Regular Expression created with aid of [RegExr](https://regexr.com/) by gskinner."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "  * Diagrams drawn using [draw.io / diagrams.net](https://app.diagrams.net/ \"Diagram with anyone, anywhere\")"
      }
    ],
    "authorContributionMap": {
      "adi-kd0021": 59
    }
  },
  {
    "path": "docs/team/chilaiping.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "# Chi Lai Ping’s - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "## Project: NUS Expenses Tracker (NET)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "### Contributions to the project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* New Feature: Added the ability to view all expenses."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "([#20](https://github.com/AY2021S1-TIC4001-4/tp/pull/20))."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * What it does: Allows the user to see all expenses input so far  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Justification: This feature is important in the product because user need to view the expenses for reference at any time.  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* New Feature: Added the ability to add, view and delete budget."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "([#38](https://github.com/AY2021S1-TIC4001-4/tp/pull/38))."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * What it does: Allow the user to create new budget and compare current expenses with respect to budget.  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Justification: This feature considers the additional feature because it is useful for user to understand the current spending compare to target budget. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Credits: Logic and design adapted from existing addressbook-level2 ([Parser](https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java]))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* Code contributed: [RepoSense Link](https://nus-tic4001-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dchilaiping\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* Project management"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Managed releases ```v1.0``` - ```v3.0``` (3 releases) on Github"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* Community"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Reported bugs in regards to regex and as well as Update features. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* Enhancements to existing features:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Enhanced the budget function with persistent storage. ([BudgetStorage](https://github.com/AY2021S1-TIC4001-4/tp/pull/65))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Junit testing for Search and BudgetList related classes. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    ([Search Test](https://github.com/AY2021S1-TIC4001-4/tp/pull/24))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    ([BudgetList Test](https://github.com/AY2021S1-TIC4001-4/tp/pull/50))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    * Budget-related feature description update. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    * Added ViewBudgetCommand Object diagram ([#86](https://github.com/AY2021S1-TIC4001-4/tp/pull/86))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    * Added ViewBudgetCommand Sequence diagram "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "* Community:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "  * Our application was created using a combination of pair-programming and adhoc coding sessions. During each session lasting between an hour to four or more, all group members sat in a meeting session while coding/ implementing their assigned components. If a concern was raised or support was needed, they shared their screen via the meeting session and everyone participated or assisted to clear the obstacle. Using this method we\u0027ve successfully cleared v1.0 to v3.0 of our project milestones. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "\t"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 47
    }
  },
  {
    "path": "docs/team/e0261618.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0261618"
        },
        "content": "# Hngoi Zi Wen’s - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "## Project: NUS Expenses Tracker (NET)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0261618"
        },
        "content": "NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": "### Contributions to the project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* New Feature: Added the ability to delete expenses."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0261618"
        },
        "content": "([#13](https://github.com/AY2021S1-TIC4001-4/tp/pull/13))."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * What it does: Allows the user to delete transaction one at a time. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Justification: This feature is considered as the core features of the product as a user can make mistakes in their commands and the app should provide a convenient way for them to remove them."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Credits: Logic and design adapted from addressbook-level2 ([Url](https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/ui/TextUi.java))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* New Feature: Added the ability to generate a summary report based on a specific time period."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0261618"
        },
        "content": "([#40](https://github.com/AY2021S1-TIC4001-4/tp/pull/40))."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * What it does: Allows the user to generate a list of expenses summary and export it into excel format with basic information such as Date, Usage, Category, Amount, Report Generated Date-Time, Report Generated Period Date-Time. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Justification: This feature is the highlight of the product as a user does not only get to add daily expenses/budget into the system, but also to generate a summary report for them to view and better manage their expenses."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Credits: This function uses Java API to access Microsoft Excel format files."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Code contributed: [RepoSense Link](https://nus-tic4001-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003de0261618\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0261618"
        },
        "content": " "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Project management"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Managed releases ```v1.0``` - ```v3.0``` (3 releases) on Github"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0261618"
        },
        "content": " "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Enhancements to existing features:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Enhanced the Report functionality to allow calculating the total expenses over a time period"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    * Created a skeleton of the User Guide.([#25](https://github.com/AY2021S1-TIC4001-4/tp/pull/25))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    * Added initial draft documentation for all features.([#25](https://github.com/AY2021S1-TIC4001-4/tp/pull/25))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "\t* Did cosmetic tweaks to existing documentation, alignment, update documentation for features on V2.0 release. ([#49](https://github.com/AY2021S1-TIC4001-4/tp/pull/49))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    * Added Setting Up and Getting Started ([#82](https://github.com/AY2021S1-TIC4001-4/tp/pull/82))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    * Added implementation details of the ```delete``` and ```generate report``` feature. ([#82](https://github.com/AY2021S1-TIC4001-4/tp/pull/82))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0261618"
        },
        "content": "\t"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Community:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Our application was created using a combination of pair-programming and adhoc coding sessions. During each session lasting between an hour to four or more, all group members sat in a meeting session while coding/ implementing their assigned components. If a concern was raised or support was needed, they shared their screen via the meeting session and everyone participated or assisted to clear the obstacle. Using this method we\u0027ve successfully cleared v1.0 to v3.0 of our project milestones. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0261618"
        },
        "content": "* Tools"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0261618"
        },
        "content": "  * Integrated a third-party library (Apache POI) to the report function."
      }
    ],
    "authorContributionMap": {
      "e0261618": 41
    }
  },
  {
    "path": "docs/team/skyventus.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "# Olivier Cheah Kun Da’s - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "## Project: NUS Expenses Tracker (NET)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "### Contributions to the project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* New Feature: Added the ability to view total expenses."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "([#17](https://github.com/AY2021S1-TIC4001-4/tp/pull/17))."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * What it does: Allows the user to see their total expenses made so far  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Justification: This feature is the highlight of the product because other than keying the expenses, user would also wish to see the total expense so far. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* New Feature: Added the storage ability to load and save expenses."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "([#35](https://github.com/AY2021S1-TIC4001-4/tp/pull/35))."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * What it does: Allow the user to keep all the expenses record they have when they use the systems. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Justification: This feature consider the core feature because persistence storage is important for user to maintain all their expenses through out the daily usage. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Credits: Logic and design adapted from addressbook-level2 ([Storage](https://github.com/se-edu/addressbook-level2/tree/master/src/seedu/addressbook/storage))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Code contributed: [RepoSense Link](https://nus-tic4001-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dskyventus\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": " "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Project management"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Managed releases ```v1.0``` - ```v3.0``` (3 releases) on Github"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Community"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Reported bugs in regards to regex and as well as Update features. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Enhancements to existing features:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Enhanced the codebase with logs function. ([Assert/log](https://github.com/AY2021S1-TIC4001-4/tp/pull/42))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Enhanced the codebase with assertions. ([Assert/log](https://github.com/AY2021S1-TIC4001-4/tp/pull/42))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Junit testing setup data and coverage for total/storage/Delete/TransactionList related classes. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    ([Storage Unit Test](https://github.com/AY2021S1-TIC4001-4/tp/pull/48))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    ([Total/Delete/TransactionList](https://github.com/AY2021S1-TIC4001-4/tp/pull/22))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    * Storage feature description update. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    * Added implementation details of the Storage and ```total``` feature."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    * Added non function requirement for NET."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "\t"
      }
    ],
    "authorContributionMap": {
      "skyventus": 42
    }
  },
  {
    "path": "docs/team/timmyly7.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "# Li Yi’s Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "## Project: NUS Expenses Tracker (NET)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "NET is an app for managing expenses, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "### Contributions to the project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* Initial Parser Util for all commands([#11](https://github.com/AY2021S1-TIC4001-4/tp/pull/11))"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* New Feature: Added the ability to add expenses in the system([#12](https://github.com/AY2021S1-TIC4001-4/tp/pull/12), [#36](https://github.com/AY2021S1-TIC4001-4/tp/pull/36)) "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * What it does: Allows the user to add daily expenses one at a time. User can specify information such as description, data, amount and category. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Justification: This feature is considered as one of the core features of the product as a user will need to add an expense in their commands in order to manage them and the app should provide a convenient way for them to do so."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Credits: Logic and design adapted from addressbook-level2 ([AddCommand](https://github.com/se-edu/addressbook-level2/tree/master/src/seedu/addressbook/command))"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* New Feature: Added the ability to update expenses in the system."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "([#41](https://github.com/AY2021S1-TIC4001-4/tp/pull/41))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * What it does: This feature is considered as one of the core features of the product and it improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Justification: This feature is the highlight of the product as a user does not only get to add daily expenses/budget into the system, but also to generate a summary report for them to view and better manage their expenses. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Credits: N/A"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "       "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* New Feature: Ability to view transaction records over a certain time period."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "([#47](https://github.com/AY2021S1-TIC4001-4/tp/pull/47))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * What it does: This feature is considered as one of the enhancement of the existing feature of the product and it improves the product more flexible to see the specific time period of transactions."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Justification: This feature is the highlight of the product as a user does not only view all the transactions all the time, but also to indicate specific time period of the transaction. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Credits: N/A"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* Code contributed: [RepoSense Link](https://nus-tic4001-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dtimmyly7\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-08-14\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": " "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* Project management"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Managed releases ```v1.0``` - ```v3.0``` (3 releases) on Github"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": " "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* Enhancements to existing features:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Enhanced the View functionality to allow filtering to display only transactions of a specified category"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Enhanced the Update functionality to allow updating of a transactions category."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* Documentation:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * User Guide:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    * Added documentation for the features Add "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    * Added documentation for the features Update "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Developer Guide:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    * TBD"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "* Community:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "  * Our application was created using a combination of pair-programming and adhoc coding sessions. During each session lasting between an hour to four or more, all group members sat in a meeting session while coding/ implementing their assigned components. If a concern was raised or support was needed, they shared their screen via the meeting session and everyone participated or assisted to clear the obstacle. Using this method we\u0027ve successfully cleared v1.0 to v3.0 of our project milestones. "
      }
    ],
    "authorContributionMap": {
      "timmyly7": 45
    }
  },
  {
    "path": "expenses/mytransaction.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0261618"
        },
        "content": " lunch $3.00 /c MISC"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2020-09-09 dinner $4.00 /c MISC"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "2020-09-24  dinner  $5.00 /c FOOD"
      }
    ],
    "authorContributionMap": {
      "e0261618": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/NusExpenses.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.common.Constants;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.storage.BudgetStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.storage.Storage.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyBudget;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class NusExpenses {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // Version info of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String VERSION \u003d \"NUS Expenses Tracker - Version 2.0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //private Storage storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private TransactionList transactionList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private BudgetList budgetList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //private BudgetList budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private BudgetStorage budgetStorage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private List\u003c? extends ReadOnlyBudget\u003e lastShownBudgetList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static void main(String... args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        //Start the Expense Tracker."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        new NusExpenses().run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        runLoopTillIssuedExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Setup and prints the welcome message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            this.storage \u003d initializeStorage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            this.budgetStorage \u003d initializeBudgetStorage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            this.transactionList \u003d storage.load();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            this.budgetList \u003d budgetStorage.load();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showWelcomeMessage(VERSION);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (this.transactionList !\u003d null \u0026\u0026 !this.transactionList.getTransactionList().isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                ui.showToUser(Constants.ADD_EXPENSE_REMINDER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (InvalidStorageFilePathException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IllegalValueException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Prints the Goodbye messages and exits."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void runLoopTillIssuedExit() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            String userCommandText \u003d ui.readUserCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            command.setBudgetData(budgetList, lastShownBudgetList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            recordResult(result);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showResultToUser(result);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void recordResult(CommandResult result) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Optional\u003cList\u003c? extends ReadOnlyTransaction\u003e\u003e transactionList \u003d result.getRelevantTransactions();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (transactionList.isPresent()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            lastShownList \u003d transactionList.get();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            storage.save(transactionList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            budgetStorage.save(budgetList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showToUser(\"An error has occurred! Please reach out to Proj Team @https://ay2021s1-tic4001-4.github.io/tp/AboutUs.html\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            ui.showToUser(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Storage initializeStorage() throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new Storage();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private BudgetStorage initializeBudgetStorage() throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return new BudgetStorage();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 18,
      "skyventus": 20,
      "timmyly7": 18,
      "-": 7,
      "adi-kd0021": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class AddBudgetCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budgetadd\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"New Budget has been Added\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \": Adds a budget to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Parameters: CATEGORY DESCRIPTION $AMOUNT\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \" daily/food $20.00\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private final Budget toAdd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public AddBudgetCommand(String category, String description, double amount) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (category.toUpperCase().startsWith(\"M\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            this.toAdd \u003d new Budget(\"MONTHLY\", description.toUpperCase(), amount);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (category.toUpperCase().startsWith(\"W\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            this.toAdd \u003d new Budget(\"WEEKLY\", description.toUpperCase(), amount);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            this.toAdd \u003d new Budget(\"DAILY\", description.toUpperCase(), amount);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            budgetList.addBudget(toAdd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New transaction added.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": Adds a transaction to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Parameters: DESCRIPTION $AMOUNT DATE...\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \" Lunch at Com2 $4.50 14-Oct-2020\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final Transaction toAdd;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public AddCommand(String description, double amount,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                      Date date, String category) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        logger.log(Level.INFO, \"Executing Add Command...\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.toAdd \u003d new Transaction(description, amount, date,category);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            transactionList.addTransaction(toAdd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            System.out.println(\"Add command execute\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 5,
      "timmyly7": 22,
      "adi-kd0021": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyBudget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    protected TransactionList transactionList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    protected List\u003c? extends ReadOnlyTransaction\u003e readOnlyTransaction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private int targetIndex \u003d -1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected BudgetList budgetList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected List\u003c? extends ReadOnlyBudget\u003e readOnlyBudget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.setTargetIndex(targetIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static String getMessageForTransactionListShownSummary("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        List\u003c? extends ReadOnlyTransaction\u003e transactionsDisplayed) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return String.format(Constants.MESSAGE_PERSONS_LISTED_OVERVIEW, transactionsDisplayed.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    protected ReadOnlyTransaction getTargetTransaction() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        return transactionList.getTransactionList().get(--targetIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setData(TransactionList transactionList, List\u003c? extends ReadOnlyTransaction\u003e readOnlyTransactions) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert transactionList !\u003d null : \"transaction should not be null object\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.transactionList \u003d transactionList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.readOnlyTransaction \u003d readOnlyTransactions;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public int getTargetIndex() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return targetIndex;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Executes the command for Budget and returns the result."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected ReadOnlyBudget getTargetBudget() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return budgetList.getBudgetList().get(--targetIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setBudgetData(BudgetList budgetList, List\u003c? extends ReadOnlyBudget\u003e readOnlyBudget) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.readOnlyBudget \u003d readOnlyBudget;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 16,
      "skyventus": 2,
      "timmyly7": 14,
      "adi-kd0021": 37,
      "e0261618": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * The feedback message to be shown to the user. Contains a description of the execution result."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final List\u003c? extends ReadOnlyTransaction\u003e transaction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        transaction \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult(String feedbackToUser, List\u003c? extends ReadOnlyTransaction\u003e transaction) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.transaction \u003d transaction;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Optional\u003cList\u003c? extends ReadOnlyTransaction\u003e\u003e getRelevantTransactions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return Optional.ofNullable(transaction);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 4,
      "adi-kd0021": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyBudget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class DeleteBudgetCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budgetdelete\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Budget Deleted.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \": Delete Budget List from NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \" 2\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public DeleteBudgetCommand(int targetIndex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(targetIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assert targetIndex \u003e\u003d 0 : \"index shouldn\u0027t be a negative value\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            final ReadOnlyBudget target \u003d getTargetBudget();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            budgetList.removeBudget(target);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, target));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(\"Out of index\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (BudgetList.BudgetNotFound budgetNotFound) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new CommandResult(\"Budget Not found\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String MESSAGE_DELETE_TRANSACTION_SUCCESS \u003d \"Transaction deleted.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": Deletes a transaction from the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Parameters: INDEX_OF_TRANSACTION_IN_LIST...\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \" 2\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public DeleteCommand(int targetIndex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        super(targetIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert targetIndex \u003e\u003d 0 : \"index shouldn\u0027t be a negative value\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            final ReadOnlyTransaction target \u003d getTargetTransaction();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            transactionList.removeTransaction(target);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DELETE_TRANSACTION_SUCCESS, target));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(\"Out of index\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (TransactionList.TransactionNotFound transactionNotFound) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(\"Transaction Not found\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 1,
      "timmyly7": 4,
      "adi-kd0021": 8,
      "e0261618": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting NUS Expenses Tracker as requested ...\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 18,
      "adi-kd0021": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                AddCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + UpdateCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + DeleteCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + SearchCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ViewCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + TotalCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + AddBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ViewBudgetCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ReportCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + HelpCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + System.lineSeparator() + \"\\n\" + ExitCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 2,
      "timmyly7": 5,
      "adi-kd0021": 16,
      "e0261618": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 4,
      "adi-kd0021": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ReportCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0261618"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0261618"
        },
        "content": "public class ReportCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Report exported successfully.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"report\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            + \": Generate transactions summary report and export as excel.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            + \"Parameters: STARTDATE ENDDATE...\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            + \" /sd 2020-09-28 /ed 2020-09-30\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    private Date startDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    private Date endDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public ReportCommand(String filePath, Date startDate,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                         Date endDate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            transactionList.generateReport(this.filePath, this.startDate, this.endDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0261618"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0261618": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/SearchCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"search\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": Search for transaction(s) in the NUS Expenses Tracker using a single keyword\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Parameters: KEYWORD...\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \" lunch\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public SearchCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new String(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final List\u003cReadOnlyTransaction\u003e transactionsFound \u003d getTransactionsWithNameContainingKeyword(keyword);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult(getMessageForTransactionListShownSummary(transactionsFound), transactionsFound);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private List\u003cReadOnlyTransaction\u003e getTransactionsWithNameContainingKeyword(String keyword) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final List\u003cReadOnlyTransaction\u003e matchedTransactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (ReadOnlyTransaction transaction : transactionList.getTransactionList()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if (transaction.getDescription().toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                matchedTransactions.add(transaction);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return matchedTransactions;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 1,
      "timmyly7": 2,
      "adi-kd0021": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/TotalCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TotalCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"total\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Date startDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Date endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            + \": Displays all the transaction in the Expenses Application as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TotalCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TotalCommand(Date startDate, Date endDate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return \"TotalCommand{}\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        double totalAmount \u003d 0.00;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        List\u003cTransaction\u003e allTransactions;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (this.startDate \u003d\u003d null \u0026\u0026 this.endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            allTransactions \u003d transactionList.getTransactionList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            allTransactions \u003d transactionList.getTransactionsWithinPeriod(startDate, endDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        totalAmount \u003d transactionList.getTotalAmount(allTransactions);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                String.format(\"The total amount you have spent so far is $%.2f\", totalAmount),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                allTransactions);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 38,
      "timmyly7": 5,
      "adi-kd0021": 3,
      "e0261618": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/UpdateCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Transaction updated.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"update\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \": Update a transaction to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"Parameters: INDEX DESCRIPTION $AMOUNT DATE...\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            + \"Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            + \" 1 /a 5 /u Dinner /d 2020-09-02 /c FOOD\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final Transaction toUpdate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public UpdateCommand(int index, String description, double amount,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                         Date date,String category) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert index \u003e\u003d 0 : \"index shouldn\u0027t be a negative value\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        setTargetIndex(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.toUpdate \u003d new Transaction(description, amount, date,category);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            transactionList.updateTransaction(toUpdate, getTargetIndex());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toUpdate));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 1,
      "timmyly7": 34,
      "adi-kd0021": 2,
      "e0261618": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ViewBudgetCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class ViewBudgetCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final Date today \u003d new Date();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budgetview\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Above are all budgets entered.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \": View a list of budgets added to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        double total \u003d 0.00;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        List\u003cBudget\u003e allBudgets \u003d budgetList.getBudgetList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        List\u003cTransaction\u003e allTransactions \u003d transactionList.getTransactionList();;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for (Budget budget: allBudgets) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(\"[\\\\\\\\]CATEGORY: \" + budget.getCategory()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + \" || DESCRIPTION: \" + budget.getDescription()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + \" || Budget : $\" + budget.getAmount());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            total \u003d 0.0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            switch (budget.getCategory()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case (\"DAILY\") :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                for (Transaction transaction: allTransactions) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    if (transaction.getDate() !\u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                            \u0026\u0026 sdf.format(transaction.getDate()).compareTo(sdf.format(today)) \u003d\u003d 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                            \u0026\u0026 transaction.getCategory().equals(budget.getDescription())) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        total \u003d total + transaction.getAmount();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(\"[\\\\\\\\] Current Spending TODAY for CATEGORY \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + budget.getDescription() + \" is $\" + total);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case(\"WEEKLY\") :"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                cal.setTime(today);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                int todayweek \u003d cal.get(Calendar.WEEK_OF_YEAR);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                int week \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                for (Transaction transaction: allTransactions) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    if (transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        cal.setTime(transaction.getDate());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        week \u003d cal.get(Calendar.WEEK_OF_YEAR);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        if (todayweek \u003d\u003d week"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                                \u0026\u0026 transaction.getCategory().equals(budget.getDescription())) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                            total \u003d total + transaction.getAmount();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(\"[\\\\\\\\] Current Spending MONTHLY for CATEGORY \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + budget.getDescription() + \" is $\" + total);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case(\"MONTHLY\") :"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                cal.setTime(today);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                int todaymonth \u003d cal.get(Calendar.MONTH);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                int month \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                for (Transaction transaction: allTransactions) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    if (transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        cal.setTime(transaction.getDate());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        month \u003d cal.get(Calendar.MONTH);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        if (todaymonth \u003d\u003d month"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                                \u0026\u0026 transaction.getCategory().equals(budget.getDescription())) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                            total \u003d total + transaction.getAmount();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                new CommandResult(\"Test\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(\"[\\\\\\\\] Current Spending MONTHLY for CATEGORY \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + budget.getDescription() + \" is $\" + total);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            default :"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(\"Nothing happened\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if (total \u003c\u003d budget.getAmount()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(\"[\\\\\\\\] You expenses is on track. Good Job!\" + \"\\n[\\\\\\\\]\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(\"[\\\\\\\\] You have overspent for this category!\" + \"\\n[\\\\\\\\]\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 102
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Above are all transaction entered.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \": View a list of transactions added to the NUS Expenses Tracker.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Date startDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Date endDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public ViewCommand(String category) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public ViewCommand(Date startDate, Date endDate) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        List\u003cTransaction\u003e allTransactions;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (this.category !\u003d null \u0026\u0026 !this.category.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (Transaction.enumContains(this.category.toUpperCase())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                allTransactions \u003d transactionList.getTransactionsByCategory(this.category.toUpperCase());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                return new CommandResult(\"Displaying category: \" + this.category.toUpperCase() + \" \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                        + String.format(MESSAGE_SUCCESS), allTransactions);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            allTransactions \u003d transactionList.getTransactionsWithinPeriod(this.startDate, this.endDate);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            String timePeriod \u003d transactionList.getDatePeriodString(this.startDate, this.endDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new CommandResult(\"Displaying : \" + timePeriod + \" \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    + String.format(MESSAGE_SUCCESS), allTransactions);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new CommandResult(\"Incorrect View Command\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 10,
      "timmyly7": 14,
      "adi-kd0021": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/common/Constants.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"See you again soon. Good bye!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Welcome to NUS Expenses Tracker!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\\n%1$s\\n%2$s\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d transactions listed!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String MESSAGE_COMMAND_LIST \u003d \"\\nadd \u003cKEYWORD\u003e  $\u003cAMOUNT\u003e \u003cDATE\u003e[optional]\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\nsearch \u003cKEYWORD\u003e\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\nshow\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\ndelete \u003cINDEX\u003e\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            + \"\\ndisplay\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String UPDATE_COMMAND_AMOUNT_PARAM \u003d \"/a\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String UPDATE_COMMAND_DATE_PARAM \u003d \"/d\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String UPDATE_COMMAND_USAGE_PARAM \u003d \"/u\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String UPDATE_COMMAND_CATEGORY_PARAM \u003d \"/c\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String REPORT_COMMAND_START_DATE_PARAM \u003d \"/sd\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final String REPORT_COMMAND_END_DATE_PARAM \u003d \"/ed\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String VIEW_COMMAND_START_DATE_PARAM \u003d \"/sd\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String VIEW_COMMAND_END_DATE_PARAM \u003d \"/ed\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final String ADD_EXPENSE_REMINDER \u003d \"Have you added an expense today? \\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 5,
      "adi-kd0021": 16,
      "e0261618": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Budget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Budget implements ReadOnlyBudget {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Budget(String category, String description, double amount) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setAmount(int amount) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void setDCategory(String category) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getAsTextShowAll() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\"Budget Description: \")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\"Budget Amount: $\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getAmount());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\"Budget Category: \")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getCategory());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 53
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/BudgetList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class BudgetList implements Iterable\u003cBudget\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private final List\u003cBudget\u003e internalBudgetList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.internalBudgetList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetList(List\u003cBudget\u003e listOfBudget) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.internalBudgetList \u003d listOfBudget;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public List\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        List\u003cBudget\u003e list \u003d internalBudgetList.stream().collect(Collectors.toList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void addBudget(Budget budget) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert budget !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        internalBudgetList.add(budget);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void removeBudget(ReadOnlyBudget toRemove) throws BudgetList.BudgetNotFound {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        internalBudgetList.remove(toRemove);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Iterator\u003cBudget\u003e iterator() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return internalBudgetList.iterator();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static class BudgetNotFound extends Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 42,
      "skyventus": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ReadOnlyBudget.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public interface ReadOnlyBudget {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    double getAmount();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    String getCategory();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    default String getAsTextShowAll() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\"Category: \")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getCategory());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\" Description: \")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        builder.append(\" Amount: $\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                .append(getAmount());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ReadOnlyTransaction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public interface ReadOnlyTransaction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    double getAmount();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    Date getDate();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    String getCategory();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    enum CategoryType {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        ENTERTAINMENT,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        FITNESS,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        FOOD,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        GIFT,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        MEDICAL,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        MISC,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        RECURRING,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        SHOPPING,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        TRANSPORT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    void setAmount(double amount);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    void setDescription(String description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    void setDate(Date date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    void setCategory(ReadOnlyTransaction.CategoryType categoryType);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    String getAsTextShowAll();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 1,
      "timmyly7": 9,
      "adi-kd0021": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Transaction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Transaction implements ReadOnlyTransaction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private CategoryType category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Transaction(String description, double amount, Date date,String categoryType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (categoryType.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            categoryType \u003d \"MISC\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.category \u003d CategoryType.valueOf(categoryType.toUpperCase());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setDate(Date date) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void setCategory(CategoryType categoryType) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.category \u003d categoryType;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String getAsTextShowAll() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        builder.append(\" Description: \")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                .append(getDescription());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        builder.append(\" Amount: $\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                .append(getAmount());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (!(getDate() \u003d\u003d null)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            builder.append(\" Date: \")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    .append(sdf.format(getDate()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        builder.append(\" Category: \")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                .append(getCategory());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return this.category.toString().toUpperCase();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static boolean enumContains(String test) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (CategoryType categoryType : CategoryType.values()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (categoryType.name().equals(test)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 3,
      "timmyly7": 6,
      "adi-kd0021": 79
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/TransactionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class TransactionList implements Iterable\u003cTransaction\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private final List\u003cTransaction\u003e internalTransactionList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public TransactionList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.internalTransactionList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TransactionList(List\u003cTransaction\u003e listOfTransaction) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.internalTransactionList \u003d listOfTransaction;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public List\u003cTransaction\u003e getTransactionList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        List\u003cTransaction\u003e list \u003d internalTransactionList.stream().collect(Collectors.toList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void addTransaction(Transaction transaction) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert transaction !\u003d null : \"transaction should not be null object\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        internalTransactionList.add(transaction);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public void removeTransaction(ReadOnlyTransaction toRemove) throws TransactionNotFound {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert toRemove !\u003d null : \"ReadOnlyTransaction should not be null object\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        internalTransactionList.remove(toRemove);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void updateTransaction(ReadOnlyTransaction toUpdate, int index) throws TransactionNotFound {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert toUpdate !\u003d null : \"Transaction should not be null object\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        ReadOnlyTransaction target \u003d internalTransactionList.get(index - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (toUpdate.getAmount() \u003e 0.0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            target.setAmount(toUpdate.getAmount());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (!toUpdate.getDescription().isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            target.setDescription(toUpdate.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (toUpdate.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            target.setDate(toUpdate.getDate());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (toUpdate.getCategory() !\u003d null \u0026\u0026 !toUpdate.getCategory().isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            target.setCategory(ReadOnlyTransaction.CategoryType.valueOf(toUpdate.getCategory()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public List\u003cTransaction\u003e getTransactionsByCategory(String category) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        assert category !\u003d null : \"Category should not be a null object\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        List\u003cTransaction\u003e transactionsAccordingToCategory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (Transaction transaction: internalTransactionList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (transaction.getCategory().equalsIgnoreCase(category)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                transactionsAccordingToCategory.add(transaction);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return transactionsAccordingToCategory;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public List\u003cTransaction\u003e getTransactionsWithinPeriod(Date startDate, Date endDate) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        List\u003cTransaction\u003e requiredPeriodTransaction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Calendar c \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (startDate !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            c.setTime(startDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            c.add(Calendar.DATE, -1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            startDate \u003d c.getTime();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (endDate !\u003d null) { // number of days to add"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            c.setTime(endDate);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            c.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            endDate \u003d c.getTime();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } // number of days to add"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        if (startDate !\u003d null || endDate !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            for (Transaction transaction : internalTransactionList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                if (startDate !\u003d null \u0026\u0026 endDate !\u003d null \u0026\u0026 transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    if (transaction.getDate().after(startDate) \u0026\u0026 transaction.getDate().before(endDate)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                        requiredPeriodTransaction.add(transaction);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                } else if (startDate !\u003d null \u0026\u0026 transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    if (transaction.getDate().after(startDate)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                        requiredPeriodTransaction.add(transaction);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                } else if (endDate !\u003d null \u0026\u0026 transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    if (transaction.getDate().before(endDate)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                        requiredPeriodTransaction.add(transaction);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            requiredPeriodTransaction \u003d internalTransactionList;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return requiredPeriodTransaction;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public String getDatePeriodString(Date startDate, Date endDate) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String timePeriod \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Date earlyStartDate \u003d new Date();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        List\u003cTransaction\u003e requiredPeriodTransaction \u003d getTransactionsWithinPeriod(startDate, endDate);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        for (Transaction transaction : requiredPeriodTransaction) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (startDate !\u003d null \u0026\u0026 endDate !\u003d null \u0026\u0026 transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                timePeriod \u003d Parser.sdf.format(startDate) + \" - \" + Parser.sdf.format(endDate);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            } else if (startDate !\u003d null \u0026\u0026 transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (earlyStartDate.after(transaction.getDate())) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    earlyStartDate \u003d transaction.getDate();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                timePeriod \u003d \"Every Transaction After \" + Parser.sdf.format(startDate);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            } else if (endDate !\u003d null \u0026\u0026 transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                if (earlyStartDate.after(transaction.getDate())) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    earlyStartDate \u003d transaction.getDate();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                timePeriod \u003d \"Every Transaction Before \" + Parser.sdf.format(endDate);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (startDate \u003d\u003d null \u0026\u0026 endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            timePeriod \u003d \"All Time Transactions\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return timePeriod;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void generateReport(String exportPath, Date startDate, Date endDate) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        List\u003cTransaction\u003e requiredPeriodTransaction \u003d getTransactionsWithinPeriod(startDate, endDate);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String timePeriod \u003d \"\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Date earlyStartDate \u003d new Date();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Date lateEndDate \u003d new Date();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            timePeriod \u003d getDatePeriodString(startDate, endDate);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            parser.generateReport(requiredPeriodTransaction, getTotalAmount(requiredPeriodTransaction), timePeriod);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public double getTotalAmount(List\u003cTransaction\u003e transactions) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert transactions !\u003d null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        double totalAmount \u003d 0.0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        for (Transaction transaction : transactions) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            totalAmount \u003d totalAmount + transaction.getAmount();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        return totalAmount;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Iterator\u003cTransaction\u003e iterator() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return internalTransactionList.iterator();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static class TransactionNotFound extends Exception {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 10,
      "skyventus": 10,
      "timmyly7": 67,
      "adi-kd0021": 33,
      "e0261618": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/IllegalValueException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ProcessingException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ProcessingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public ProcessingException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/BudgetListDecoded.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class BudgetListDecoded {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static BudgetList decodeBudget(List\u003cString\u003e encodedBudgets)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throws IllegalValueException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        logger.log(Level.INFO, \"Decoding your budget from the expenses file.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final List\u003cBudget\u003e decodedBudget \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for (String encodedBudget : encodedBudgets) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            decodedBudget.add(decodeBudgetFromString(encodedBudget));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        logger.log(Level.INFO, \"Decoding completed.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return new BudgetList(decodedBudget);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static Budget decodeBudgetFromString(String budgetText) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String[] budgetSplit \u003d budgetText.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String date \u003d budgetSplit[0].equals(\"-\") ? \"\" : budgetSplit[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int catIndex \u003d budgetText.indexOf(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String category \u003d budgetText.substring(0, catIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int desIndex \u003d budgetText.indexOf(\"\\\\\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String description \u003d budgetText.substring(catIndex + 1, desIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            //String description \u003d budgetText.substring("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            //        budgetText.indexOf(budgetSplit[1]), budgetText.indexOf(\"\\\\\") - 1).trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            //String category \u003d budgetText.substring(budgetText.indexOf(\" \") + 2).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            double amount \u003d Double.parseDouble(budgetText.substring(budgetText.indexOf(\"$\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + 1, budgetText.indexOf(\"/\") - 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new Budget(category, description, amount);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/BudgetListEncoded.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class BudgetListEncoded {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Encodes all the {@code Person} in the {@code toSave} into a list of decodable and readable string presentation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * for storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static List\u003cString\u003e encodeBudgetList(BudgetList toSave) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final List\u003cString\u003e encodedTransactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        toSave.getBudgetList().forEach(budget -\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                encodedTransactions.add(encodedBudgetToString(budget)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return encodedTransactions;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Encodes the {@code person} into a decodable and readable string representation."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static String encodedBudgetToString(Budget budget) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final StringBuilder encodedTransactionBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final DecimalFormat df2 \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(budget.getCategory());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(budget.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(\"\\\\\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(\"$\" + df2.format(budget.getAmount()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(\"/\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        encodedTransactionBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return encodedTransactionBuilder.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/BudgetStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class BudgetStorage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Default file path used if the user doesn\u0027t provide the file name."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String DEFAULT_FILENAME \u003d \"mybudget.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String DEFAULT_FILE_DIRECTORY \u003d \"expenses\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String fileDirectory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetStorage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.fileDirectory \u003d DEFAULT_FILE_DIRECTORY;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        File directory \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            logger.log(Level.INFO, \"No directory found, creating \" + fileDirectory + \" now\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.filePath \u003d directory.getAbsolutePath() + \"\\\\\" + DEFAULT_FILENAME;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetStorage(String fileDirectory, String fileName) throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assert !fileName.isBlank() : \"file name should not be empty.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.fileDirectory \u003d fileDirectory;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        File directory \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            logger.log(Level.INFO, \"No directory found, creating \" + fileDirectory + \" now\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!isValidFilePath(fileName)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.filePath \u003d directory.getAbsolutePath() + \"\\\\\" + fileName;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(this.filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void save(BudgetList budgetList) throws StorageOperationException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assert budgetList !\u003d null : \"budgetList shouldn\u0027t be null object\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            //logger.log(Level.INFO, \"Saving transaction in progress...\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            List\u003cString\u003e encodedTransactionList \u003d BudgetListEncoded.encodeBudgetList(budgetList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            for (String s : encodedTransactionList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                fw.write(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            //logger.log(Level.INFO, \"Saving completed.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Returns true if the given path is acceptable as a storage file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * The file path is considered acceptable if it ends with \u0027.txt\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static boolean isValidFilePath(String filePath) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return filePath.endsWith(\".txt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetList load() throws IllegalValueException, InterruptedException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!Files.exists(Paths.get(filePath))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                || !Files.isRegularFile(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            logger.log(Level.WARNING, \"No such file exist.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new BudgetList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            logger.log(Level.INFO, \"Loading all the expenses...\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return BudgetListDecoded.decodeBudget(Files.readAllLines(Paths.get(filePath)));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (IllegalValueException | IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new IllegalValueException(\"File contains illegal data values; data type constraints not met\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Signals that the given file path does not fulfill the storage filepath constraints."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public class InvalidStorageFilePathException extends IllegalValueException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        public InvalidStorageFilePathException(String message) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Signals that some error has occured while trying to convert and read/write data between the application"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * and the storage file."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 124
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Default file path used if the user doesn\u0027t provide the file name."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String DEFAULT_FILENAME \u003d \"mytransaction.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static final String DEFAULT_FILE_DIRECTORY \u003d \"expenses\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String fileDirectory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.fileDirectory \u003d DEFAULT_FILE_DIRECTORY;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        File directory \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            logger.log(Level.INFO, \"No directory found, creating \" + fileDirectory + \" now\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filePath \u003d directory.getAbsolutePath() + \"\\\\\" + DEFAULT_FILENAME;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Storage(String fileDirectory, String fileName) throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert !fileName.isBlank() : \"file name should not be empty.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.fileDirectory \u003d fileDirectory;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        File directory \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            logger.log(Level.INFO, \"No directory found, creating \" + fileDirectory + \" now\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!isValidFilePath(fileName)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filePath \u003d directory.getAbsolutePath() + \"\\\\\" + fileName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(this.filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void save(TransactionList transactionsList) throws StorageOperationException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assert transactionsList !\u003d null : \"transactionsList shouldn\u0027t be null object\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            //logger.log(Level.INFO, \"Saving transaction in progress...\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            List\u003cString\u003e encodedTransactionList \u003d TransactionListEncoded.encodeTransactionList(transactionsList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            for (String s : encodedTransactionList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                fw.write(s);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            //logger.log(Level.INFO, \"Saving completed.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Returns true if the given path is acceptable as a storage file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * The file path is considered acceptable if it ends with \u0027.txt\u0027"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static boolean isValidFilePath(String filePath) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return filePath.endsWith(\".txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TransactionList load() throws IllegalValueException, InterruptedException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (!Files.exists(Paths.get(filePath))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                || !Files.isRegularFile(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            logger.log(Level.WARNING, \"No such file exist.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return new TransactionList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            logger.log(Level.INFO, \"Loading all the expenses...\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return TransactionListDecoded.decodeTransactions(Files.readAllLines(Paths.get(filePath)));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IllegalValueException | IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new IllegalValueException(\"File contains illegal data values; data type constraints not met\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Signals that the given file path does not fulfill the storage filepath constraints."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public class InvalidStorageFilePathException extends IllegalValueException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        public InvalidStorageFilePathException(String message) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Signals that some error has occured while trying to convert and read/write data between the application"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * and the storage file."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 126,
      "adi-kd0021": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/TransactionListDecoded.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionListDecoded {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static TransactionList decodeTransactions(List\u003cString\u003e encodedTransactions)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throws IllegalValueException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        logger.log(Level.INFO, \"Decoding your transaction from the expenses file.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final List\u003cTransaction\u003e decodedTransaction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        for (String encodedTransaction : encodedTransactions) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            decodedTransaction.add(decodeTransactionFromString(encodedTransaction));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        logger.log(Level.INFO, \"Decoding completed.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new TransactionList(decodedTransaction);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static Transaction decodeTransactionFromString(String transactionText) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String[] transactionSplit \u003d transactionText.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String date \u003d transactionSplit[0].equals(\"-\") ? \"\" : transactionSplit[0].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String description \u003d transactionText.substring("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    transactionText.indexOf(transactionSplit[1]), transactionText.indexOf(\"$\") - 1).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            double amount \u003d Double.parseDouble(transactionText.substring(transactionText.indexOf(\"$\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    + 1, transactionText.indexOf(\"/c\") - 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            String category \u003d transactionText.substring(transactionText.indexOf(\"/c\") + 2).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            //Return null if date is null or empty."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Date formattedDate \u003d (date !\u003d null \u0026\u0026 !date.isEmpty()) ? Parser.sdf.parse(date) : null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new Transaction(description, amount, formattedDate, category);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 34,
      "timmyly7": 8,
      "adi-kd0021": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/TransactionListEncoded.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionListEncoded {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Encodes all the {@code Person} in the {@code toSave} into a list of decodable and readable string presentation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * for storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static List\u003cString\u003e encodeTransactionList(TransactionList toSave) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final List\u003cString\u003e encodedTransactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        toSave.getTransactionList().forEach(transaction -\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                encodedTransactions.add(encodedTransactionToString(transaction)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return encodedTransactions;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Encodes the {@code person} into a decodable and readable string representation."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static String encodedTransactionToString(Transaction transaction) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final StringBuilder encodedTransactionBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final DecimalFormat df2 \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            encodedTransactionBuilder.append(Parser.sdf.format(transaction.getDate()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(transaction.getDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\"$\" + df2.format(transaction.getAmount()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        encodedTransactionBuilder.append(\"/c\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        encodedTransactionBuilder.append(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        encodedTransactionBuilder.append(transaction.getCategory());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        encodedTransactionBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return encodedTransactionBuilder.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 39,
      "timmyly7": 5,
      "adi-kd0021": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/utilities/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import org.apache.poi.ss.usermodel.Cell;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import org.apache.poi.ss.usermodel.Row;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import org.apache.poi.ss.usermodel.Workbook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import org.apache.poi.xssf.usermodel.XSSFSheet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import org.apache.poi.xssf.usermodel.XSSFWorkbook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.DeleteBudgetCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.commands.ReportCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.SearchCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.TotalCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.UpdateCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ViewCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.AddBudgetCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.ViewBudgetCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.common.Constants;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0261618"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import static seedu.duke.common.Constants.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern BASIC_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern ADD_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Pattern.compile(\"(?\u003cdescription\u003e\\\\s?[a-zA-Z\\\\s\\\\S]+)(?\u003camount\u003e\\\\s\\\\${1}\\\\d+\\\\.?\\\\d{0,2}){1}(?\u003cdate\u003e\\\\s\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                            + \"\\\\d{4}-{1}\\\\d{2}-{1}\\\\d{2})?(?\u003ccategory\u003e\\\\s\\\\/{1}c{1}\\\\s{1}[a-zA-Z]+)?\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                            Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final Pattern UPDATE_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            Pattern.compile(\"(?\u003cindex\u003e^\\\\d$)(?\u003cusage\u003e^\\\\\\\\d$)(?\u003cdate\u003e.*)\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern SEARCH_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Pattern.compile(\"(?\u003ckeyword\u003e^[a-zA-Z0-9_]+$)\", Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final Pattern ADDBUDGET_COMMAND_FORMAT \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Pattern.compile(\"(?\u003ccategory\u003e[^/]*)(?\u003cdescription\u003e[^$]*)(?\u003camount\u003e\\\\${1}\\\\d+\\\\.?\\\\d{0,2})\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final Pattern VIEW_COMMAND_CATEGORY_FILTER_FORMAT \u003d Pattern.compile(\"(?\u003ccategoryFilter\u003e[a-zA-Z]+$)\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public static final SimpleDateFormat sdfFull \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, userInput,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return prepareAdd(arguments);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return createDeleteCommand(arguments);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case SearchCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return prepareSearchCommand(arguments);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case TotalCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return createTotalCommand(arguments);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return createViewCommand(arguments);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        case AddBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return createAddBudgetCommand(arguments);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        case ViewBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return createViewBudgetCommand(arguments);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        case DeleteBudgetCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return createDeleteBudgetCommand(arguments);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case UpdateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return prepareUpdate(arguments);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        case ReportCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            return prepareReportCommand(arguments);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        case HelpCommand.COMMAND_WORD: // Fallthrough"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private Command prepareAdd(String args) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Matcher matcher \u003d ADD_COMMAND_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        // Validate arg string format"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, args.trim(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            String dateString \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            Date date;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (!(dateString \u003d\u003d null || dateString.isEmpty())) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                date \u003d sdf.parse(dateString);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                date \u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            String categoryString \u003d matcher.group(\"category\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            String category;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (!(categoryString \u003d\u003d null || categoryString.isEmpty())) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                categoryString \u003d categoryString.substring(categoryString.indexOf(\"/\") + 2).trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                category \u003d categoryString;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                category \u003d \"\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new AddCommand("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    matcher.group(\"description\").trim(),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    Double.parseDouble(matcher.group(\"amount\").replace(\"$\", \"\")),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    date,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    category.toUpperCase()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            System.out.println(\"Inside PrepareAdd\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, args.trim(),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command createDeleteCommand(String args) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            int index \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            finalCommand \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect Delete Command\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private Command prepareSearchCommand(String args) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Matcher matcher \u003d SEARCH_COMMAND_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Search Command\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new SearchCommand("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    matcher.group(\"keyword\").trim()"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            );"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command createTotalCommand(String args) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            Date startDate \u003d null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            Date endDate \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if (args.indexOf(Constants.VIEW_COMMAND_START_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.VIEW_COMMAND_START_DATE_PARAM) + 3);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                startDate \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                assert startDate !\u003d null : \"Date cannot be null after parse\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if (args.indexOf(Constants.VIEW_COMMAND_END_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.VIEW_COMMAND_END_DATE_PARAM) + 3);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                endDate \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                assert endDate !\u003d null : \"Date cannot be null after parse\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if (startDate \u003d\u003d null \u0026\u0026 endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                finalCommand \u003d new TotalCommand();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                finalCommand \u003d new TotalCommand(startDate,endDate);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect Total Command\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command createViewCommand(String args) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Matcher categoryMatcher \u003d VIEW_COMMAND_CATEGORY_FILTER_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (categoryMatcher.matches()) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                return new ViewCommand(categoryMatcher.group(\"categoryFilter\").trim());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                String temp \u003d \"\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                Date startDate \u003d null;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                Date endDate \u003d null;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (args.indexOf(Constants.VIEW_COMMAND_START_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d args.substring(args.indexOf(Constants.VIEW_COMMAND_START_DATE_PARAM) + 3);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                        temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    startDate \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    assert startDate !\u003d null : \"Date cannot be null after parse\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (args.indexOf(Constants.VIEW_COMMAND_END_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d args.substring(args.indexOf(Constants.VIEW_COMMAND_END_DATE_PARAM) + 3);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                        temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    endDate \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    assert endDate !\u003d null : \"Date cannot be null after parse\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                return new ViewCommand(startDate, endDate);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect View Command\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return new ViewCommand(null, null);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command prepareUpdate(String args) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String usage \u003d \"\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        double amount \u003d 0.0;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        String category \u003d \"\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            final Integer index \u003d Integer.parseInt(args.trim().split(\" \")[0]);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_AMOUNT_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_AMOUNT_PARAM) + 2);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                amount \u003d Double.parseDouble(temp.trim());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_DATE_PARAM) + 2);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                date \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_USAGE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_USAGE_PARAM) + 2);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                usage \u003d temp.trim();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            if (args.indexOf(Constants.UPDATE_COMMAND_CATEGORY_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.UPDATE_COMMAND_CATEGORY_PARAM) + 2).trim();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                category \u003d temp.trim().toUpperCase();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new UpdateCommand(index, usage, amount, date, category);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        } catch (IllegalArgumentException argumentException) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            return new IncorrectCommand(\"Incorrect update command: \" + args.trim());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "            return new IncorrectCommand(\"Incorrect update command: \" + e.getMessage());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Command createAddBudgetCommand(String args) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        final Matcher matcher \u003d ADDBUDGET_COMMAND_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        // Validate arg string format"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Budget Add Command\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!matcher.group(\"category\").toUpperCase().startsWith(\"D\")"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                \u0026\u0026 !matcher.group(\"category\").toUpperCase().startsWith(\"W\")"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                \u0026\u0026 !matcher.group(\"category\").toUpperCase().startsWith(\"M\")) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Budget Category\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (!args.contains(\"/\")) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(\"Incorrect Budget Description\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new AddBudgetCommand("
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    matcher.group(\"category\").trim(),"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    matcher.group(\"description\").trim().replace(\"/\", \"\"),"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    Double.parseDouble(matcher.group(\"amount\").replace(\"$\", \"\"))"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            );"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Command createDeleteBudgetCommand(String args) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int index \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new DeleteBudgetCommand(index);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect Delete Budget Command\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Command createViewBudgetCommand(String args) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new ViewBudgetCommand();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect View Budget Command\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    private Command prepareReportCommand(String args) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        Command finalCommand;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            Date startDate \u003d null;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            Date endDate \u003d null;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            if (args.indexOf(Constants.REPORT_COMMAND_START_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.REPORT_COMMAND_START_DATE_PARAM) + 3);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                startDate \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                assert startDate !\u003d null : \"Date cannot be null after parse\";"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            if (args.indexOf(Constants.REPORT_COMMAND_END_DATE_PARAM) \u003e 0) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                temp \u003d args.substring(args.indexOf(Constants.REPORT_COMMAND_END_DATE_PARAM) + 3);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                if (temp.indexOf(\"/\") \u003e 0) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                    temp \u003d temp.substring(0, temp.indexOf(\"/\"));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                endDate \u003d sdf.parse(temp.trim());"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "                assert endDate !\u003d null : \"Date cannot be null after parse\";"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            finalCommand \u003d new ReportCommand(null, startDate, endDate);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            finalCommand \u003d new IncorrectCommand(\"Incorrect Report Command\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        return finalCommand;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    public void generateReport(List\u003cTransaction\u003e transactionList, double totalAmount, String timePeriod) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        String excelFilePath \u003d \"TransactionReportSummary.xlsx\";"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            Workbook workbook \u003d new XSSFWorkbook();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            XSSFSheet sheet \u003d (XSSFSheet) workbook.createSheet(\"Summary\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            writeHeaderLine(sheet);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            writeDataLines(transactionList, workbook, sheet, totalAmount, timePeriod);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            FileOutputStream outputStream \u003d new FileOutputStream(excelFilePath);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            workbook.write(outputStream);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    private void writeHeaderLine(XSSFSheet sheet) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        Row headerRow \u003d sheet.createRow(0);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        Cell headerCell \u003d headerRow.createCell(0);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell.setCellValue(\"Date\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell \u003d headerRow.createCell(1);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell.setCellValue(\"Usage\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell \u003d headerRow.createCell(2);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell.setCellValue(\"Category\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell \u003d headerRow.createCell(3);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        headerCell.setCellValue(\"Amount\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    private void writeDataLines(List\u003cTransaction\u003e transactions, Workbook workbook,"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                                XSSFSheet sheet, double totalAmount, String timePeriod) {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        int rowCount \u003d 1;"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        Row row \u003d null;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        Cell cell \u003d null;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        for (Transaction transaction : transactions) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            assert transactions !\u003d null : \"Cannot export empty transactions\";"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            final String usage \u003d transaction.getDescription();"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            final double amount \u003d transaction.getAmount();"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            final String category \u003d transaction.getCategory();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            if (transaction.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "e0261618"
        },
        "content": "                date \u003d sdf.format(transaction.getDate());"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            row \u003d sheet.createRow(rowCount++);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            int columnCount \u003d 0;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell \u003d row.createCell(columnCount++);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell.setCellValue(date);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell \u003d row.createCell(columnCount++);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell.setCellValue(usage);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell \u003d row.createCell(columnCount++);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell.setCellValue(category);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell \u003d row.createCell(columnCount++);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "e0261618"
        },
        "content": "            cell.setCellValue(\"$\" + amount);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        rowCount++;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        row \u003d sheet.createRow(rowCount++);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell \u003d row.createCell(2);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell.setCellValue(\"Total :\");"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell \u003d row.createCell(3);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell.setCellValue(\"$\" + totalAmount);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        row \u003d sheet.createRow(rowCount++);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell \u003d row.createCell(0);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell.setCellValue(\"Generated on :\" + sdfFull.format(new Date()));"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        row \u003d sheet.createRow(rowCount++);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell \u003d row.createCell(0);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "e0261618"
        },
        "content": "        cell.setCellValue(\"Generate Period : \" + timePeriod);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "e0261618"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "e0261618"
        },
        "content": "    }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 69,
      "skyventus": 26,
      "timmyly7": 153,
      "adi-kd0021": 88,
      "e0261618": 129
    }
  },
  {
    "path": "src/main/java/seedu/duke/utilities/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import static seedu.duke.common.Constants.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import static seedu.duke.common.Constants.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Display / Show to user stuffs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Decorative prefix."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"[\\\\\\\\]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // A platform independent line separator."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    //Offset to use 1-indexing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    // Format of indexed list item."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \" %1$d. %2$s\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static final String DIVIDER \u003d \"***************************************************\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showWelcomeMessage(String version) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        //String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                DIVIDER,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                DIVIDER,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                MESSAGE_WELCOME,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                version,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "                DIVIDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Read in the next input line."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        out.print(LINE_PREFIX + \"Input command: \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        String fullLineInput \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(\"[Command entered:\" + fullLineInput + \"]\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return fullLineInput;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "     * Close the inputstream."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void endInputFeed() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        out.println(LINE_PREFIX);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final Optional\u003cList\u003c? extends ReadOnlyTransaction\u003e\u003e resultTransaction \u003d result.getRelevantTransactions();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        if (resultTransaction.isPresent()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            showTransactionListView(resultTransaction.get());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(DIVIDER, result.feedbackToUser, DIVIDER);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Shows a list of expenses to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Private contact details are hidden."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void showTransactionListView(List\u003c? extends ReadOnlyTransaction\u003e transactions) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final List\u003cString\u003e formattedTransaction \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (ReadOnlyTransaction transaction : transactions) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            formattedTransaction.add(transaction.getAsTextShowAll());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUserAsIndexedList(formattedTransaction);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Shows a list of strings to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private void showToUserAsIndexedList(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        showToUser(getIndexedListForViewing(list));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Formats a list of strings as a viewable indexed list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        final StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        for (String listItem : listItems) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            displayIndex++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return formatted.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * Formats a string as a viewable indexed list item."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     * @param visibleIndex visible index for this listing"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private static String getIndexedListItem(int visibleIndex, String listItem) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 4,
      "adi-kd0021": 133
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.commands.ViewCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import javax.swing.text.View;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 9,
      "-": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString \u003d \"Add lunch $4.00 2020-09-20\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_add() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command \u003d new Parser().parseCommand(commandString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result \u003d command.execute().feedbackToUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"New transaction added.\", result);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 46
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/DeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void execute_delete() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(3, command.transactionList.getTransactionList().size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        DeleteCommand command2 \u003d new DeleteCommand(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(2, command.transactionList.getTransactionList().size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void execute_delete_withWrongIndex() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(5);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Out of index\", command.execute().feedbackToUser);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 44
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/SearchCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class SearchCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void searchCommand_Test() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        SearchCommand command \u003d new SearchCommand(\"chicken\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"1 transactions listed!\", command.execute().feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        SearchCommand command2 \u003d new SearchCommand(\"rice\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        command2.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        assertEquals(\"2 transactions listed!\", command2.execute().feedbackToUser);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 31,
      "adi-kd0021": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/TotalCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TotalCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void execute_total() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        TotalCommand command \u003d new TotalCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        assertEquals(\"The total amount you have spent so far is $221.10\", command.execute().feedbackToUser);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 28,
      "adi-kd0021": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/UpdateCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class UpdateCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString \u003d \"update 1 /c FOOD /d 2020-09-28\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_update() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command \u003d new Parser().parseCommand(commandString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result \u003d command.execute().feedbackToUser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"Transaction updated.\", result);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 45
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/ViewCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.ReadOnlyTransaction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ViewCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString \u003d \"view\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString2 \u003d \"view /sd 2020-09-28\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public static final String commandString3 \u003d \"view /ed 2020-09-28\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    //Expenses list shown to the user recently."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private List\u003c? extends ReadOnlyTransaction\u003e lastShownList \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_view() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command \u003d new Parser().parseCommand(commandString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result \u003d command.execute().feedbackToUser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"Displaying : All Time Transactions \\nAbove are all transaction entered.\", result);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command2 \u003d new Parser().parseCommand(commandString2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command2.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result2 \u003d command2.execute().feedbackToUser;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"Displaying : Every Transaction After 2020-09-28 \\nAbove are all transaction entered.\", result2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        Command command3 \u003d new Parser().parseCommand(commandString3);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        command3.setData(transactionList, lastShownList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        String result3 \u003d command3.execute().feedbackToUser;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertEquals(\"Displaying :  \\nAbove are all transaction entered.\", result3);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 63
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/BudgetListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.utilities.SetupBudgetData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class BudgetListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private SetupBudgetData setupData \u003d new SetupBudgetData();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private BudgetList budgetList \u003d setupData.loadBudgetData();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //Test list index 0 and 1 to get its description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void budget_getList_getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"MISC\", budgetList.getBudgetList().get(0).getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"FOOD\", budgetList.getBudgetList().get(1).getDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"RENT\", budgetList.getBudgetList().get(2).getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(\"ENTERTAINMENT\", budgetList.getBudgetList().get(3).getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //Test list index 0 and 1 to get its amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void transactionList_getList_getAmount() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(300.00, budgetList.getBudgetList().get(0).getAmount());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(500.00, budgetList.getBudgetList().get(1).getAmount());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(300.00, budgetList.getBudgetList().get(2).getAmount());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(250.00, budgetList.getBudgetList().get(3).getAmount());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 32
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/TransactionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.SetupTransactionData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private SetupTransactionData setupData \u003d new SetupTransactionData();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d setupData.loadTransactionData();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Test list index 0 and 1 to get its description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transaction_getList_getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Chicken Rice\", transactionList.getTransactionList().get(0).getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Fried Rice\", transactionList.getTransactionList().get(1).getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Test list index 0 and 1 to get its amount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transactionList_getList_getAmount() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(4.00, transactionList.getTransactionList().get(0).getAmount());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(15.00, transactionList.getTransactionList().get(1).getAmount());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Test removing index 0 transaction and assert the size."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transactionList_getList_removeTransaction() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ReadOnlyTransaction transactionToRemove \u003d transactionList.getTransactionList().get(0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            transactionList.removeTransaction(transactionToRemove);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            assertEquals(3, transactionList.getTransactionList().size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (TransactionList.TransactionNotFound transactionNotFound) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            assertEquals(\"\", transactionNotFound.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 42
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/TransactionDecodedTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.exception.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionDecodedTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void decodeTransactionsTest() throws IllegalValueException, ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        List\u003cString\u003e decodeListString \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        decodeListString.add(\"2020-10-27 Chicken Rice $4.00 /c FOOD\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        TransactionList transactionsList \u003d TransactionListDecoded.decodeTransactions(decodeListString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        final DecimalFormat df2 \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        var actualDescription \u003d transactionsList.getTransactionList().get(0).getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        var actualAmount \u003d transactionsList.getTransactionList().get(0).getAmount();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        var actualDate \u003d transactionsList.getTransactionList().get(0).getDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"Chicken Rice\", actualDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"4.00\", df2.format(actualAmount));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(Parser.sdf.parse(\"2020-10-27\"), actualDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 35
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/TransactionEncodedTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.utilities.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TransactionEncodedTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void transactionEncodedTest() throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        TransactionList transactionList \u003d new TransactionList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        Transaction transaction \u003d new Transaction(\"Chicken Rice\", 4.00, Parser.sdf.parse(\"2020-10-27\"), \"FOOD\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        transactionList.addTransaction(transaction);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        List\u003cString\u003e encodedTransactionList \u003d TransactionListEncoded.encodeTransactionList(transactionList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(\"2020-10-27 Chicken Rice $4.00 /c FOOD\", encodedTransactionList.get(0).trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 26
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.SearchCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.TotalCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ViewCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "    private Command addCommand \u003d new AddCommand(\"lunch\", 4.00, new Date(),\"FOOD\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command deleteCommand \u003d new DeleteCommand(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command viewCommand \u003d new ViewCommand(null,null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private Command totalCommand \u003d new TotalCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String ADD_COMMAND_STRING \u003d \"Add lunch $4.00 2020-09-09\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String DELETE_COMMAND_STRING \u003d \"delete 1\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String VIEW_COMMAND_STRING \u003d \"view\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String TOTAL_COMMAND_STRING \u003d \"total\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String EXIT_COMMAND_STRING \u003d \"exit\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String HELP_COMMAND_STRING \u003d \"help\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    private static final String SEARCH_COMMAND_STRING \u003d \"search test\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    public void execute_parser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getAddCommand \u003d new Parser().parseCommand(ADD_COMMAND_STRING);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getDeleteCommand \u003d new Parser().parseCommand(DELETE_COMMAND_STRING);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getViewCommand \u003d new Parser().parseCommand(VIEW_COMMAND_STRING);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getTotalCommand \u003d new Parser().parseCommand(TOTAL_COMMAND_STRING);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getExitCommand \u003d new Parser().parseCommand(EXIT_COMMAND_STRING);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getHelpCommand \u003d new Parser().parseCommand(HELP_COMMAND_STRING);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        final Command getSearchCommand \u003d new Parser().parseCommand(SEARCH_COMMAND_STRING);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getAddCommand instanceof AddCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getDeleteCommand instanceof DeleteCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getViewCommand instanceof ViewCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getTotalCommand instanceof TotalCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getExitCommand instanceof ExitCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getHelpCommand instanceof HelpCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "        assertTrue(getSearchCommand instanceof SearchCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timmyly7"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timmyly7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timmyly7": 52,
      "adi-kd0021": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/SetupBudgetData.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.BudgetList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class SetupBudgetData {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Budget budgetData1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Budget budgetData2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Budget budgetData3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Budget budgetData4;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private BudgetList budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public SetupBudgetData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.budgetData1 \u003d new Budget(\"Monthly\", \"MISC\", 300.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.budgetData2 \u003d new Budget(\"Monthly\", \"FOOD\", 500.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.budgetData3 \u003d new Budget(\"Monthly\", \"RENT\", 300.0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.budgetData4 \u003d new Budget(\"Daily\", \"ENTERTAINMENT\", 250.);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public BudgetList loadBudgetData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            for (Budget t : getBudgetData()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                this.budgetList.addBudget(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return this.budgetList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            assert false : \"Error encountered\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return this.budgetList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Budget[] getBudgetData() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return new Budget[]{budgetData1, budgetData2, budgetData3, budgetData4};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 43
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/SetupTransactionData.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Class to generate typical test test."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class SetupTransactionData {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Transaction transactionData4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TransactionList transactionList \u003d new TransactionList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public SetupTransactionData() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            this.transactionData1 \u003d new Transaction(\"Chicken Rice\", 4.00, sdf.parse(\"2020-10-27\"), \"FOOD\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            this.transactionData2 \u003d new Transaction(\"Fried Rice\", 15.00, sdf.parse(\"2020-10-28\"), \"FOOD\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            this.transactionData3 \u003d new Transaction(\"Corsair Keyboard\", 200.00, null, \"ENTERTAINMENT\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            this.transactionData4 \u003d new Transaction(\"Menthol Mints\", 2.10, null, \"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TransactionList loadTransactionData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            for (Transaction t : getTransactionData()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                this.transactionList.addTransaction(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return this.transactionList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            assert false : \"Error encountered\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return this.transactionList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Transaction[] getTransactionData() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new Transaction[]{transactionData1, transactionData2, transactionData3, transactionData4};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 38,
      "adi-kd0021": 15
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/StorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package seedu.duke.utilities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.Transaction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.data.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static Path testFolder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static final String TEST_DATA_FOLDER \u003d \"src/test/java/seedu/duke/utilities\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private static final String NON_EXISTANT_FILE_NAME \u003d \"ThisFileDoesNotExist.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void constructor_nullFilePath_exceptionThrown() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new Storage(null, null));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Storage getStorage(String fileName) throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return new Storage(TEST_DATA_FOLDER, fileName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 30
    }
  },
  {
    "path": "src/test/java/seedu/duke/utilities/expensesTest.txt",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "2020-10-27 Chicken Rice $4.00 /c FOOD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": "2020-10-28 Fried Rice $15.00 /c FOOD"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": " Corsair Keyboard $200.00 /c ENTERTAINMENT"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " Menthol Mints $2.10 /c MISC"
      }
    ],
    "authorContributionMap": {
      "skyventus": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adi-kd0021"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "adi-kd0021": 1
    }
  }
]
