[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    mainClassName \u003d \"moneytracker.MoneyTracker\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    archiveBaseName \u003d \"MoneyTracker\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 3,
      "-": 44
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "This app targets young working adults in Singapore who are living on"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "a tight budget and would like to have better insight into their spending habits."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "This app allows users to track their income and expenditure."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "This helps them to stay within their budget and make timely adjustments to their spending habits when necessary."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|potential user|download the app|get a feel what the app can do|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|potential user|browse through the user guide|have an overview of what are the commands available|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|new user|access the user guide|refer to it when I forget how to use the app|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|new user|add an income|keep track of my incomes|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|new user|add an expense|keep track of my expenses|"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|new user|add an income category|group my incomes under this category|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|new user|add an expense category|group my expense under this category|"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|new user|list my incomes and expenses|view all my monetary transactions|"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|user|clear all my data|start afresh with the app|"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v1.0|expert user|list my incomes or expenses based on a specified month|view the filtered transactions|"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "|v2.0|expert user|edit an income or expense category|change the name of the category|"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 15,
      "-": 30
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Money Tracker is a CLI application that allows users to keep track of their income and expenses."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Users can record their inflows and outflows of money and then view monthly reports of these movements of money."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "2. Download the latest `MoneyTracker.jar` [here](https://github.com/AY2021S1-TIC4001-2/tp/releases)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "3. Copy `MoneyTracker.jar` to the folder you want to use as the home folder for Money Tracker."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "4. Navigate to the home folder for Duke on your CLI program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "5. Launch Money Tracker by running the command `java -jar MoneyTracker.jar`."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "6. Type the command in the CLI program and press `Enter` to execute it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "\u003cbr\u003eSome example commands you can try:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    - `addcate lunch`: Adds an expense category."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    - `listcat /te`: Lists all expense categories."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    - `adde /a3.50 /cFood /d2020-09-20 /eLunch with boss.`: Adds an expense."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    - `list /te /m2020-09`: Lists all expenses in Sep 2020."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    - `report 2020-09`: Displays summary report for Sep 2020."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "7. Refer to **Features** below for details of each command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Notes about the command format:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- Words in UPPER_CASE are the parameters to be supplied by the user.\u003cbr /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "E.g. `DESCRIPTION` in the command `addi /aAMOUNT /cINCOME_CATEGORY [/dDATE] [/eDESCRIPTION]`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- Parameters in square brackets are optional.\u003cbr /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "E.g. `TYPE` in the command `listcat [/tTYPE]` can be omitted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- Parameters can be in any order.\u003cbr /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "E.g. The command `list [/tTYPE] [/mMONTH]` can also be in this form: `list [/mMONTH] [/tTYPE]`."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Shows the URL of the user manual."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `help`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Please refer to this online user guide:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "https://ay2021s1-tic4001-2.github.io/tp/UserGuide.html"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "### Adding an income category: `addcati`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Adds an income category. Income category is used for classifying incomes. E.g. SALARY, DIVIDEND, INTEREST."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format: `addcati INCOME_CATEGORY`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `INCOME_CATEGORY` is case-insensitive; income categories will be stored and"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  displayed in uppercase. E.g. `salary` will be stored and displayed as `SALARY`."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `addcati salary`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Got it! I have added this income category:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  [I] SALARY"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  Now you have 1 categories in your list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "### Adding an expense category: `addcate`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Adds an expense category. Expense category is used for classifying expense. E.g. FOOD, RENT, ENTERTAINMENT."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format: `addcate EXPENSE_CATEGORY`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `EXPENSE_CATEGORY` is case-insensitive; expense categories will be stored and"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "displayed in uppercase. E.g. `Food` will be stored and displayed as `FOOD`."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `addcate Food`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Got it! I have added this expense category:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  [E] FOOD"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  Now you have 2 categories in your list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "### Listing all income / expense categories: `listcat`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Shows a list of all income and/or expense categories."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format: `listcat [/tTYPE]`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `TYPE` must either be the letter `i` or `e`. If `TYPE` is `i`, only income categories will be"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "listed. Similarly, if `TYPE` is `e`, only expense categories will be listed. If `TYPE` is"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "omitted, both income and expense categories will be listed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `listcat /te`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here are your expense categories:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  1. [E] FOOD"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  2. [E] RENT"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  3. [E] ENTERTAINMENT"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `listcat`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here are your categories:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  1. [I] SALARY"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  2. [I] DIVIDEND"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  3. [E] FOOD"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  4. [E] RENT"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  5. [E] ENTERTAINMENT"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "### Editing an income / expense category: `editcat`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Edits a specified income or expense category."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Format: `editcat INDEX /nNEW_NAME`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- The `listcat` command must be executed first before using the `editcat` command."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `INDEX` refers to the index number shown in the list generated by the `listcat` command."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `INDEX` must a positive integer. E.g. `1`, `2`, `3`…"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- The category indicated by the index number will be changed to `NEW_NAME`."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `editcat 1 /nSalary`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Noted! I have edited this income category: "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "   From [I] SALARIES to [I] SALARy"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "### Deleting an income / expense category: `deletecat`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Deletes a specified income or expense category."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format: `deletecat INDEX`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- The `listcat` command must be executed first before using the `deletecat` command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `INDEX` refers to the index number shown in the list generated by the `listcat` command."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `INDEX` must a positive integer. E.g. `1`, `2`, `3`…"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- The category indicated by the index number will be deleted."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `deletecat 5`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Noted! I have removed this expense category:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  [E] ENTERTAINMENT"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  Now you have 4 categories in your list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "### Adding an income: `addi`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Adds an income."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Format: `addi /aAMOUNT /cINCOME_CATEGORY [/dDATE] [/eDESCRIPTION]`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `AMOUNT` must be a positive integer or decimal. E.g. `4000`, `3000.75`, `2000.5`."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `INCOME_CATEGORY` is case-insensitive. E.g. `salary` will match `SALARY`."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `DATE` must be in yyyy-MM-dd format. E.g. `2020-09-20`."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0260222"
        },
        "content": "-  If `DATE` is omitted, the date of this income will be set to the current date of the system."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- If `DESCRIPTION` is omitted, the description of this income will be blank."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `addi /a9000 /cSalary /d2020-09-01 /eGiven $4000 bonus!`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Got it! I’ve added this income:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    [I] SALARY $9000.00 on 01 Sep 2020 (Given $4000 bonus!)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    Now you have 1 transactions in your list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0260222"
        },
        "content": "### Adding an expense: `adde`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Adds an expense."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Format: `adde /aAMOUNT /cEXPENSE_CATEGORY [/dDATE] [/eDESCRIPTION]`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `AMOUNT` must be a positive integer or decimal. E.g. `400`, `3.50`, `4.5`."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `EXPENSE_CATEGORY` is case-insensitive. E.g. `Food` will match `FOOD`."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `DATE` must be in yyyy-MM-dd format. E.g. `2020-09-20`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0260222"
        },
        "content": "-  If `DATE` is omitted, the date of this expense will be set to the current date of the system."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- If `DESCRIPTION` is omitted, the description of this expense will be blank."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `adde /a3.50 /cFood /d2020-09-20 /eLunch with boss.`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Got it! I’ve added this expense:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    [E] FOOD $3.50 on 20 Sep 2020 (Lunch with boss.)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    Now you have 2 transactions in your list."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "### Listing incomes / expenses: `list`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Shows a list of incomes / expenses."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format:  `list [/tTYPE] [/mMONTH]` \u003cbr\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `TYPE` must either be the letter `i` or `e`. If `TYPE` is `i`, only incomes will be listed."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Similarly, if `TYPE` is `e`, only expenses will be listed. If `TYPE` is omitted, both"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "incomes and expenses will be listed. (`list` ,or `list [/tTYPE]` , or `list [/mMONTH]` ,  or `list [/tTYPE] [/mMONTH]` , or `list [/mMONTH] [/tTYPE]` )"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `MONTH` must be in `yyyy-MM` format. E.g. `2020-09`. Only transactions in this month"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "will be listed. If `MONTH` is omitted, all transactions will be listed."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `list /te /m2020-09` "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here are your expense records for 2020-09:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  1. [E] RENT $500 on 01 Sep 2020"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  2. [E] FOOD $10.00 on 18 Sep 2020 (Dinner at McDonalds’)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  3. [E] FOOD $3.50 on 20 Sep 2020 (Lunch with boss.)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here are your transactions:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  1. [I] SALARY $5000.00 on 01 Aug 2020"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  2. [E] RENT $500 on 01 Aug 2020"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  3. [I] SALARY $9000.00 on 01 Sep 2020 (Given $4000 bonus!)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  4. [E] RENT $500 on 01 Sep 2020"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  5. [E] FOOD $10.00 on 18 Sep 2020 (Dinner at McDonalds’)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  6. [E] FOOD $3.50 on 20 Sep 2020 (Lunch with boss.)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `list /te`  "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here are your expenses:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  1. [E] RENT $500 on 01 Aug 2020"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  2. [E] RENT $500 on 01 Sep 2020"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  3. [E] FOOD $10.00 on 18 Sep 2020 (Dinner at McDonalds’)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  4. [E] FOOD $3.50 on 20 Sep 2020 (Lunch with boss.)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `list /m2020-09`  "
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here are your transactions for 2020-09:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  1. [I] SALARY $9000.00 on 01 Sep 2020 (Given $4000 bonus!)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  2. [E] RENT $500 on 01 Sep 2020"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  3. [E] FOOD $10.00 on 18 Sep 2020 (Dinner at McDonalds’)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "  4. [E] FOOD $3.50 on 20 Sep 2020 (Lunch with boss.)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "### Deleting an income / expense: `delete`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Deletes a specified income or expense."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- The `list` command must be executed first before using the `delete` command."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `INDEX` refers to the index number shown in the list generated by the `list` command."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- `INDEX` must a positive integer. E.g. `1`, `2`, `3`."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "- The transaction indicated by the index number will be deleted."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Example of usage: `delete 5`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Noted! I have removed this expense:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    [E] FOOD $10.00 on 18 Sep 2020 (Dinner at McDonalds’)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "### Clearing all data: `clear`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Clears all incomes / expenses and income / expense categories."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `clear`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Noted! I have cleared all data"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "```"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Viewing monthly report: `report`"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Shows a report that summarises the incomes and expenses for a specified month."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Format: `report MONTH`"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "e0260222"
        },
        "content": "- `MONTH` must be in yyyy-MM format. E.g. `2020-09`."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "- The summary report for the specified month will be displayed."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage: `report 2020-09`"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Here is your report for Sep 2020: "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Total Income: $9200.00"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Total Expense: $2000.00"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Balance: $7200.00 "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "Average Expense Per Day: $66.67"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Highest Income:"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [I] SALARY $9000.00 on 01 Sep 2020 (Given $4000 bonus!)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Highest Expense:"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [E] FOOD $120.00 on 18 Sep 2020 (Dinner with wife.)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Highest Frequency Expense Category: "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "e0260222"
        },
        "content": "  [E] FOOD (87 Records)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Income Categories:"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [I] SALARY $9000.00 (Highest) "
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [I] DIVIDEND $200.00"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expense Categories:"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [E] FOOD $848.50 (Highest)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [E] ENTERTAINMENT $651.50 [E] RENT $500.00"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Exiting the program: `exit`"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Exits the program. "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Example of usage: `exit`"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Bye! Hope to see you again soon."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "e0260222"
        },
        "content": "```"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0260222"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "e0260222"
        },
        "content": "There is no save command because any change "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "e0260222"
        },
        "content": "to the data will be automatically saved."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "e0260222"
        },
        "content": "**Q**:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "e0260222"
        },
        "content": "How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "e0260222"
        },
        "content": "**A**: "
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Go to Money Tracker\u0027s root folder in the current computer."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Copy the data folder and paste it into the Money Tracker\u0027s root folder in the new computer."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "e0260222"
        },
        "content": "Click `Yes` if the system prompts you for confirmation of overwriting."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* View help `help`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* Add income category `addcati INCOME_CATEGORY`"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* Add expense category `addcate EXPENSE_CATEGORY`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* List income / expense categories `listcat [/tTYPE]`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* Delete income / expense category `deletecat INDEX`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* Edit income / expense category `editcat INDEX /nNEW_NAME`"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "* Add income `addi /aAMOUNT /cINCOME_CATEGORY [/dDATE] [/eDESCRIPTION]`"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "* Add expense `adde /aAMOUNT /cEXPENSE_CATEGORY [/dDATE] [/eDESCRIPTION]`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* List incomes / expenses `list [/tTYPE] [/mMONTH]`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "* Delete income / expense `delete INDEX`"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* Clear data `clear`"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* View monthly report `report MONTH`"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "e0260222"
        },
        "content": "* Exit program `exit`"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 23,
      "dgc5213": 169,
      "e0260222": 124,
      "-": 27
    }
  },
  {
    "path": "src/main/java/moneytracker/MoneyTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Implements an application that allows users to manage monetary transactions."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * It contains methods that allow the creation, modification and storage of monetary transactions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class MoneyTracker {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private TransactionList transactions;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private CategoryList categories;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eMoneyTracker\u003c/code\u003e object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactionsFilePath Path of the text file used for storing app data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public MoneyTracker(String transactionsFilePath, String categoriesFilePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert !transactionsFilePath.isBlank() : \"filePath should not be blank\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage \u003d new Storage(transactionsFilePath, categoriesFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            storage.createDirectory();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories \u003d new CategoryList(storage.loadCategories(categoriesFilePath));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories \u003d new CategoryList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            transactions \u003d new TransactionList(storage.loadTransactions(transactionsFilePath));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            transactions \u003d new TransactionList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String fullCommand \u003d ui.readUserCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                c.execute(transactions, ui, storage, categories);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Main method of Money Tracker. This is the starting point of the app."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @param args Command line arguments. Not used."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        new MoneyTracker(\"data/transactions.txt\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                \"data/categories.txt\").run();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 72
    }
  },
  {
    "path": "src/main/java/moneytracker/command/AddExpenseCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to add an expense category."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class AddExpenseCategoryCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eAddIncomeCategoryCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public AddExpenseCategoryCommand(String fullCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the add expense category command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.addCategory(Parser.createExpenseCategory(fullCommand));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveCategories(categories);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddCategory(categories);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "e0260222": 39
    }
  },
  {
    "path": "src/main/java/moneytracker/command/AddExpenseCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to add an expense."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class AddExpenseCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eAddExpenseCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public AddExpenseCommand(String fullCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the add expense command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        transactions.addTransaction(Parser.createExpense(fullCommand), categories);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTransactions(transactions);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddedTransaction(transactions);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 40
    }
  },
  {
    "path": "src/main/java/moneytracker/command/AddIncomeCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to add an income category."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class AddIncomeCategoryCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eAddIncomeCategoryCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public AddIncomeCategoryCommand(String fullCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the add income category command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.addCategory(Parser.createIncomeCategory(fullCommand));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveCategories(categories);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddCategory(categories);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "e0260222": 39
    }
  },
  {
    "path": "src/main/java/moneytracker/command/AddIncomeCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to add an income."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class AddIncomeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eAddIncomeCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public AddIncomeCommand(String fullCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the add income command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        transactions.addTransaction(Parser.createIncome(fullCommand), categories);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTransactions(transactions);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddedTransaction(transactions);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 40
    }
  },
  {
    "path": "src/main/java/moneytracker/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to clear all data."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the clear all data command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printClearConfirmation();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            String confirmation \u003d ui.readUserCommand().toUpperCase();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (confirmation.equals(\"Y\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                categories.clearCategories();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                transactions.clearTransactions();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                storage.clearAllData();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ui.printClearAllData(confirmation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else if (confirmation.equals(\"N\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ui.printClearAllData(confirmation);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ui.printClearAllData(confirmation);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "e0260222": 41
    }
  },
  {
    "path": "src/main/java/moneytracker/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a command that a user wants to execute. A \u003ccode\u003eCommand\u003c/code\u003e object contains"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * methods needed for executing the user\u0027s command . This class defines the common behaviour that"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * can be inherited by subclasses with specific implementation of a Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the user\u0027s command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public abstract void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Returns false to prevent Money Tracker from exiting after the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Subclasses should override this method to return true if Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * needs to exit after the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 34
    }
  },
  {
    "path": "src/main/java/moneytracker/command/DeleteCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to delete a category."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class DeleteCategoryCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eDeleteCategoryCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public DeleteCategoryCommand(String fullCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the delete category command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(categories.getIsInitialized())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"Please run the listcat command first.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int categoryIndex \u003d Parser.getDeleteIndex(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category categoryToDelete;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categoryToDelete \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    categories.getCategory(categories.getSearchResultIndex(categoryIndex));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description \u003d categoryToDelete.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String type \u003d categoryToDelete.getType().toLowerCase() + \" category\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.removeCategory(categories.getSearchResultIndex(categoryIndex));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveCategories(categories);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printRemoveCategory(categories.getSize(), description, type);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.setIsInitialized(false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 55
    }
  },
  {
    "path": "src/main/java/moneytracker/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Income;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Transaction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to delete a transaction."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eDeleteCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the delete transaction command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(transactions.getIsInitialized())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"Please run the list command first.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int transactionIndex \u003d Parser.getDeleteIndex(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Transaction transactionToDelete;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            transactionToDelete \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    transactions.getTransaction(transactions.getSearchResultIndex(transactionIndex));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The transaction index is invalid.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description \u003d transactionToDelete.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String type \u003d getTransactionType(transactionToDelete);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        transactions.removeTransaction(transactions.getSearchResultIndex(transactionIndex));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTransactions(transactions);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printRemoveTransaction(transactions.getSize(), description, type);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        transactions.setIsInitialized(false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the type of a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param transaction \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return type of a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @throws MoneyTrackerException when this exceptional condition happens."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private String getTransactionType(Transaction transaction) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (transaction instanceof Income) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            type \u003d \"income\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else if (transaction instanceof Expense) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            type \u003d \"expense\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The type is invalid\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 7,
      "e0260222": 70
    }
  },
  {
    "path": "src/main/java/moneytracker/command/EditCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Transaction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Income;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Expense;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to add edit a category."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class EditCategoryCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eEditCategoryCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public EditCategoryCommand(String fullCommand) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the edit category command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If there is a processing error."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(categories.getIsInitialized())) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"Please run the listcat command first.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String[] editParameters \u003d Parser.getEditParameters(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int categoryIndex;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categoryIndex \u003d Integer.parseInt(editParameters[0]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category categoryToEdit;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categoryToEdit \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    categories.getCategory(categories.getSearchResultIndex(categoryIndex));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String newName;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            newName \u003d editParameters[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The new category name is missing.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String currentName \u003d categoryToEdit.getName();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String currentDescription \u003d categoryToEdit.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categoryToEdit.setName(newName.toUpperCase());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        transactions.updateTransactionsCategory(currentName, newName);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String type \u003d categoryToEdit.getType().toLowerCase() + \" category\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String newDescription \u003d categoryToEdit.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printEditCategory(currentDescription, newDescription, type);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveCategories(categories);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.setIsInitialized(false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 74
    }
  },
  {
    "path": "src/main/java/moneytracker/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to exit Money Tracker."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Returns true so that Money Tracker will exist after this command is executed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 32
    }
  },
  {
    "path": "src/main/java/moneytracker/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the method to show the URL of the user guide."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the help command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 24
    }
  },
  {
    "path": "src/main/java/moneytracker/command/ListCategoryCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to list all categories."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ListCategoryCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eListCategoryCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public ListCategoryCommand(String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * Executes the list categories command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                        CategoryList categories) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.setIsInitialized(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.getSize(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        int len \u003d this.fullCommand.split(\" \").length;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String[] lineArr \u003d this.fullCommand.split(\" \", 4);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListCategory(categories);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 2) \u0026 (lineArr[1].toLowerCase().equals(\"/te\"))) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListCategoryExpenseOnly(categories);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 2) \u0026 (lineArr[1].toLowerCase().equals(\"/ti\"))) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListCategoryIncomeOnly(categories);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printError(\"Please enter valid command.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 8,
      "dgc5213": 16,
      "e0260222": 30
    }
  },
  {
    "path": "src/main/java/moneytracker/command/ListCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to list all transactions."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eListCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public ListCommand(String fullCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the list transactions command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.setIsInitialized(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            transactions.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String listMonthName \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        int len \u003d this.fullCommand.split(\" \").length;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String[] lineArr \u003d this.fullCommand.split(\" \", 4);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        assert lineArr.length \u003e\u003d 0 : \"There should be at least 1 element\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        for (String inner : lineArr) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (inner.toLowerCase().contains(\"/m\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                listMonthName \u003d inner.replace(\"/m\", \"\").trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListTransaction(transactions);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 2) \u0026 (lineArr[1].toLowerCase().equals(\"/te\"))) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListTransactionExpenseOnly(transactions);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 2) \u0026 (lineArr[1].toLowerCase().equals(\"/ti\"))) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListTransactionIncomeOnly(transactions);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 2) \u0026 (lineArr[1].toLowerCase().contains(\"/m\"))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListTransactionMonthOnly(transactions,listMonthName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 3) \u0026 (Arrays.toString(lineArr).contains(\"/te\"))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListTransactionExpenseByMonth(transactions,listMonthName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if ((len \u003d\u003d 3) \u0026 (Arrays.toString(lineArr).contains(\"/ti\"))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printListTransactionIncomeByMonth(transactions,listMonthName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (len \u003c 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ui.printError(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 37,
      "e0260222": 33
    }
  },
  {
    "path": "src/main/java/moneytracker/command/ReportCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the methods for user to generate summary report."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ReportCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String fullCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eReportCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public ReportCommand(String fullCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the display report command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 35
    }
  },
  {
    "path": "src/main/java/moneytracker/command/UnknownCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains the method to inform user if the command is invalid."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Executes the invalid input command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for displaying user interactions."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object for loading and saving user data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void execute(TransactionList transactions, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        CategoryList categories) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printError(\"I\u0027m sorry, I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 25
    }
  },
  {
    "path": "src/main/java/moneytracker/exception/MoneyTrackerException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Overrides the Exception class\u0027s constructor to implement"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * custom error messages for user-defined exceptions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class MoneyTrackerException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public MoneyTrackerException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 11
    }
  },
  {
    "path": "src/main/java/moneytracker/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.AddExpenseCategoryCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.AddIncomeCategoryCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.HelpCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.ListCategoryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.DeleteCategoryCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.EditCategoryCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.AddIncomeCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.AddExpenseCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.ClearCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.ReportCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.ExitCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.command.UnknownCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Category;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Income;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Expense;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains methods that deal with parsing user commands to extract meaningful details from them."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the command word from user\u0027s input string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Command word from user\u0027s input string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static String getCommand(String fullCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates an income \u003ccode\u003eCategory\u003c/code\u003e object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eCategory\u003c/code\u003e object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If income category is missing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Category createIncomeCategory(String fullCommand) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert !fullCommand.isBlank() : \"fullCommand should not be blank\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String name \u003d fullCommand.replaceFirst(\"(?i)addcati\", \"\").toUpperCase().trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The income category name is missing.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return new Category(name, \"INCOME\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates an expense \u003ccode\u003eCategory\u003c/code\u003e object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eCategory\u003c/code\u003e object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If expense category is missing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Category createExpenseCategory(String fullCommand) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert !fullCommand.isBlank() : \"fullCommand should not be blank\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String name \u003d fullCommand.replaceFirst(\"(?i)addcate\", \"\").toUpperCase().trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The expense category name is missing.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return new Category(name, \"EXPENSE\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates an \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If amount or income category is missing."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Income createIncome(String fullCommand) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert !fullCommand.isBlank() : \"fullCommand should not be blank\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameterString \u003d fullCommand.replaceFirst(\"(?i)addi\", \"\").trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameterString.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The parameters of the command are missing.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        HashMap\u003cString, String\u003e commandParameters \u003d getCommandParameters(commandParameterString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(commandParameters.containsKey(\"amount\"))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The amount parameter is missing.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(commandParameters.containsKey(\"category\"))) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The income category parameter is missing.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String amount \u003d commandParameters.get(\"amount\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description \u003d commandParameters.get(\"description\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String date \u003d commandParameters.get(\"date\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String incomeCategory \u003d commandParameters.get(\"category\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (commandParameters.containsKey(\"date\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                return new Income(Double.parseDouble(amount), description, date, incomeCategory);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                return new Income(Double.parseDouble(amount), description, incomeCategory);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The amount must be a decimal value. E.g. 30.50\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If amount or expense category is missing."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Expense createExpense(String fullCommand) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert !fullCommand.isBlank() : \"fullCommand should not be blank\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameterString \u003d fullCommand.replaceFirst(\"(?i)adde\", \"\").trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameterString.isEmpty()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The parameters of the command are missing.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        HashMap\u003cString, String\u003e commandParameters \u003d getCommandParameters(commandParameterString);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(commandParameters.containsKey(\"amount\"))) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The amount parameter is missing.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (!(commandParameters.containsKey(\"category\"))) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The expense category parameter is missing.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String amount \u003d commandParameters.get(\"amount\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description \u003d commandParameters.get(\"description\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String date \u003d commandParameters.get(\"date\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String expenseCategory \u003d commandParameters.get(\"category\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (commandParameters.containsKey(\"date\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                return new Expense(Double.parseDouble(amount), description, date, expenseCategory);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                return new Expense(Double.parseDouble(amount), description, expenseCategory);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The amount must be a decimal value. E.g. 30.50\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets transaction/category index from user\u0027s full input string."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Index of transaction/category."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If index is missing or invalid."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static int getDeleteIndex(String fullCommand) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameterString \u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                fullCommand.replaceFirst(\"(?i)deletecat\", \"\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                        .replaceFirst(\"(?i)delete\", \"\").trim();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameterString.isEmpty()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The index is missing.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            index \u003d Integer.parseInt(commandParameterString);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return index - 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets parameters for editing category from user\u0027s full input string."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Parameters for editing category"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If index is missing or invalid."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static String[] getEditParameters(String fullCommand) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameterString \u003d fullCommand.replaceFirst(\"(?i)editcat\", \"\").trim();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameterString.isEmpty()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The index is missing.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String[] editParameters \u003d commandParameterString.split(\"/n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (int i \u003d 0; i \u003c editParameters.length; i++) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            editParameters[i] \u003d editParameters[i].trim();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return editParameters;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets \u003ccode\u003eCommand\u003c/code\u003e object from user\u0027s full input string."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String command \u003d getCommand(fullCommand).toLowerCase();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"addcati\":"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new AddIncomeCategoryCommand(fullCommand);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"addcate\":"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new AddExpenseCategoryCommand(fullCommand);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"listcat\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new ListCategoryCommand(fullCommand);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"deletecat\":"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new DeleteCategoryCommand(fullCommand);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"editcat\":"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new EditCategoryCommand(fullCommand);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"addi\":"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new AddIncomeCommand(fullCommand);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"adde\":"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new AddExpenseCommand(fullCommand);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"report\":"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new ReportCommand(fullCommand);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new UnknownCommand();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private static HashMap\u003cString, String\u003e getCommandParameters(String commandParameterString) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert !commandParameterString.isBlank() : \"commandParameterString should not be blank\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        HashMap\u003cString, String\u003e commandParametersMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String[] commandParametersArray \u003d commandParameterString.split(\"/\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (String commandParameter : commandParametersArray) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (commandParameter.startsWith(\"a\")) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                commandParametersMap.put(\"amount\", commandParameter.substring(1).trim());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else if (commandParameter.startsWith(\"c\")) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                commandParametersMap.put(\"category\", commandParameter.substring(1).toUpperCase().trim());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else if (commandParameter.startsWith(\"d\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                commandParametersMap.put(\"date\", commandParameter.substring(1).trim());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } else if (commandParameter.startsWith(\"e\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                commandParametersMap.put(\"description\", commandParameter.substring(1).trim());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        commandParametersMap.putIfAbsent(\"description\", \"\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return commandParametersMap;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 6,
      "e0260222": 234
    }
  },
  {
    "path": "src/main/java/moneytracker/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Income;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Transaction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String transactionsFilePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String categoriesFilePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eStorage\u003c/code\u003e object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactionsFilePath Path of the text file used for storing transactions."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param categoriesFilePath Path of the text file used for storing categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Storage(String transactionsFilePath, String categoriesFilePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.transactionsFilePath \u003d transactionsFilePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.categoriesFilePath \u003d categoriesFilePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Loads information of all \u003ccode\u003eTransaction\u003c/code\u003e objects from text file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public ArrayList\u003cTransaction\u003e loadTransactions(String filePath) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cTransaction\u003e transactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cString\u003e lines;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            lines \u003d getLines(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"I\u0027ve problem reading the transactions save file.\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    + \" Let\u0027s start with an empty transaction list instead.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (!(line.trim().isEmpty())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                transactions.add(createTransaction(line));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return transactions;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Loads information of all categories from text file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public ArrayList\u003cCategory\u003e loadCategories(String filePath) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cCategory\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cString\u003e lines;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            lines \u003d getLines(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"I\u0027ve problem reading the categories save file.\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    + \" Let\u0027s start with an empty category list instead.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (!(line.trim().isEmpty())) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                categories.add(createCategory(line));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return categories;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Saves information of all \u003ccode\u003eTransaction\u003c/code\u003e objects to text file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If text file is not found or inaccessible."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void saveTransactions(TransactionList transactions) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw \u003d new FileWriter(transactionsFilePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String description \u003d transactions.getTransaction(i).getDescription();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String amount \u003d transactions.getTransaction(i).getAmount();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String date \u003d transactions.getTransaction(i).getDate();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String lineToSave \u003d \" | \" + amount + \" | \" + date + \" | \" + description;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                if (transactions.getTransaction(i) instanceof Income) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    String incomeCategory \u003d ((Income) transactions.getTransaction(i)).getIncomeCategory();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    lineToSave \u003d  \"I\" + lineToSave + \" | \" + incomeCategory + System.lineSeparator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                } else if (transactions.getTransaction(i) instanceof Expense) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    String expenseCategory \u003d ((Expense) transactions.getTransaction(i)).getExpenseCategory();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    lineToSave \u003d  \"E\" + lineToSave + \" | \" + expenseCategory + System.lineSeparator();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    throw new MoneyTrackerException(\"I\u0027ve problem saving to the file.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                fw.write(lineToSave);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"I\u0027ve problem saving to the file.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Saves information of all categories to text file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If text file is not found or inaccessible."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void saveCategories(CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw \u003d new FileWriter(categoriesFilePath);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            for (int i \u003d 0; i \u003c categories.getSize(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String name \u003d categories.getCategory(i).getName();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String type \u003d categories.getCategory(i).getType();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                if (type.equals(\"INCOME\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    fw.write(\"I\" + \" | \" + name + System.lineSeparator());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                } else if (type.equals(\"EXPENSE\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    fw.write(\"E\" + \" | \" + name + System.lineSeparator());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    throw new MoneyTrackerException(\"I\u0027ve problem saving to the file.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"I\u0027ve problem saving to the file.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void clearAllData() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        clearDataInFile(transactionsFilePath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        clearDataInFile(categoriesFilePath);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void clearDataInFile(String filePath) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"I\u0027ve problem clearing data in this file: \" + filePath);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private ArrayList\u003cString\u003e getLines(String filePath) throws IOException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            result.add(s.nextLine());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private Category createCategory(String line) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String name \u003d \"\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            type \u003d line.split(\"\\\\|\")[0].trim();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            name \u003d line.split(\"\\\\|\")[1].trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            logger.log(Level.SEVERE, \"Error reading categories.txt\", e);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (type.equals(\"I\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Category(name, \"INCOME\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Category(name, \"EXPENSE\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"There is invalid data in the save file.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private Transaction createTransaction(String line) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String transactionType \u003d \"\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String amount \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String category \u003d \"\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            transactionType \u003d line.split(\"\\\\|\")[0].trim();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            amount \u003d line.split(\"\\\\|\")[1].trim();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            date \u003d line.split(\"\\\\|\")[2].trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            description \u003d line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            category \u003d line.split(\"\\\\|\")[4].trim();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            logger.log(Level.SEVERE, \"Error reading transactions.txt\", e);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        switch (transactionType) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"I\":"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Income(Double.parseDouble(amount), description, date, category);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Expense(Double.parseDouble(amount), description, date, category);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"There is invalid data in the save file.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates the directory for save files."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If the creation of file directory fails."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void createDirectory() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Path path \u003d Paths.get(\"data/\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (!(Files.exists(path))) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                Files.createDirectory(path);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                clearAllData();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"I\u0027ve problem creating the save directory!\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "e0260222": 219
    }
  },
  {
    "path": "src/main/java/moneytracker/transaction/Category.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a category for grouping incomes and expenses."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * A \u003ccode\u003eCategory\u003c/code\u003e object has a name and type indicating whether"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * it is an income or expense."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Category {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * Initializes a \u003ccode\u003eCategory\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param name Name of a \u003ccode\u003eCategory\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param type Type of a \u003ccode\u003eCategory\u003c/code\u003e, either INCOME or EXPENSE."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Category(String name, String type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assert type.equals(\"INCOME\") || type.equals(\"EXPENSE\") : \"type should be INCOME or EXPENSE\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the name of a \u003ccode\u003eCategory\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Name of a \u003ccode\u003eCategory\u003c/code\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Sets the name of a \u003ccode\u003eCategory\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the type of a \u003ccode\u003eCategory\u003c/code\u003e."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Type of a \u003ccode\u003eCategory\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the String representation of a \u003ccode\u003eCategory\u003c/code\u003e."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String symbol \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (type.equals(\"INCOME\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            symbol \u003d \"[I] \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else if (type.equals(\"EXPENSE\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            symbol \u003d \"[E] \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return symbol + name;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 10,
      "e0260222": 52
    }
  },
  {
    "path": "src/main/java/moneytracker/transaction/CategoryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Manages the in-memory category list. It contains an ArrayList that stores"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * individual \u003ccode\u003eCategory\u003c/code\u003e objects and methods to perform operations"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * such as adding and deleting categories."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class CategoryList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private ArrayList\u003cCategory\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private final ArrayList\u003cInteger\u003e searchResultIndexes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private boolean isInitialized \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Initializes an empty \u003ccode\u003eCategoryList\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Initializes a \u003ccode\u003eCategoryList\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param categories List of categories."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categories) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets a \u003ccode\u003eCategory\u003c/code\u003e from the \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param index Index of an \u003ccode\u003eCategory\u003c/code\u003e in the \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return List of categories."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Category getCategory(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return categories.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the size of a \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Size of a \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return categories.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Adds a \u003ccode\u003eCategory\u003c/code\u003e to the \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param category A \u003ccode\u003eCategory\u003c/code\u003e to be added."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void addCategory(Category category) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (!checkIfCategoryExists(category.getName(), category.getType())) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories.add(category);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new MoneyTrackerException(\"This category already exists.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Removes a \u003ccode\u003eCategory\u003c/code\u003e from the \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param index Index of a \u003ccode\u003eCategory\u003c/code\u003e in \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @throws MoneyTrackerException If index is invalid."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void removeCategory(int index) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories.remove(categories.get(index));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new MoneyTrackerException(\"Invalid index\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Checks whether a category already exists in \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param name Name of the category."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param type Type of the category."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public boolean checkIfCategoryExists(String name, String type) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (Category category : categories) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (name.equals(category.getName()) \u0026\u0026 type.equals(category.getType())) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the status of whether the listcat command has been used."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public boolean getIsInitialized() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return isInitialized;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Sets the status that the listcat command has just been used."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void setIsInitialized(boolean isInitialized) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.isInitialized \u003d isInitialized;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Adds index for a particular category listed by the listcat command."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param searchResultIndex Index of category listed by the listcat command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void addSearchResultIndex(int searchResultIndex) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        searchResultIndexes.add(searchResultIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Clears the indexes from the listcat command."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void clearSearchResultIndexes() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        searchResultIndexes.clear();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the indexes from the listcat command."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public ArrayList\u003cInteger\u003e getSearchResultIndexes() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return searchResultIndexes;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the index for a particular category listed by the listcat command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public int getSearchResultIndex(int resultIndex) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return searchResultIndexes.get(resultIndex);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Clears the \u003ccode\u003eCategoryList\u003c/code\u003e."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void clearCategories() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 89,
      "e0260222": 52
    }
  },
  {
    "path": "src/main/java/moneytracker/transaction/Expense.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents an expense that a user has incurred. An \u003ccode\u003eExpense\u003c/code\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * object has an amount, a description, a date and a category."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Expense extends Transaction {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private String expenseCategory;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param amount Amount of money of an expense."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of an expense."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param date Date of an expense."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Expense(double amount, String description,String date,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                   String expenseCategory) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(amount, description, date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.expenseCategory \u003d expenseCategory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param amount Amount of money of an expense."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of an expense."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Expense(double amount, String description, String expenseCategory) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(amount, description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.expenseCategory \u003d expenseCategory;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the category of an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Category of an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getExpenseCategory() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return expenseCategory;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Sets the category of an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void setExpenseCategory(String expenseCategory) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.expenseCategory \u003d expenseCategory;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the String representation of an \u003ccode\u003eExpense\u003c/code\u003e."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return \"[E] \" + expenseCategory.toUpperCase() + \" \" + super.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 59
    }
  },
  {
    "path": "src/main/java/moneytracker/transaction/Income.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents an income that a user has earned. An \u003ccode\u003eIncome\u003c/code\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * object has an amount, a description, a date and a category."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Income extends Transaction {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private String incomeCategory;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes an \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param amount Amount of money of an income."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of an income."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param date Date of an income."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Income(double amount, String description, String date, String incomeCategory) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(amount, description, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.incomeCategory \u003d incomeCategory;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes an \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param amount Amount of money of an income."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of an income."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Income(double amount, String description, String incomeCategory) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(amount, description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.incomeCategory \u003d incomeCategory;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the category of an \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Category of an \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getIncomeCategory() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return incomeCategory;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Sets the category of an \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void setIncomeCategory(String incomeCategory) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.incomeCategory \u003d incomeCategory;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the String representation of an \u003ccode\u003eIncome\u003c/code\u003e."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return \"[I] \" + incomeCategory.toUpperCase() + \" \" + super.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 58
    }
  },
  {
    "path": "src/main/java/moneytracker/transaction/Transaction.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a transaction that a user has made. A \u003ccode\u003eTransaction\u003c/code\u003e object has an amount,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * a description and a date. This class defines the common behaviours that can be inherited by"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * subclasses with specific implementation of a transaction."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public abstract class Transaction {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final double amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param amount Amount of money in a transaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a transaction."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param date Date of a transaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Transaction(double amount, String description, String date) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            this.date \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"Date should be in yyyy-MM-dd format. E.g. 2020-12-25\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param amount Amount of money in a transaction."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a transaction."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Transaction(double amount, String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Gets the amount of a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return Amount of a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getAmount() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return String.valueOf(amount);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Gets the description of a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return Description of a \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the date of a \u003ccode\u003eTransaction\u003c/code\u003e."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return date of a \u003ccode\u003eTransaction\u003c/code\u003e."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String setMonth() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter formattedMonth \u003d DateTimeFormatter.ofPattern(\"yyyy-MM\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String monthName \u003d formattedMonth.format(this.date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return monthName;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the String representation of a \u003ccode\u003eTransaction\u003c/code\u003e."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String output \u003d \"$\" + String.format(\"%.2f\", amount) + \" on \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            return output + \" (\" + description + \")\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 39,
      "e0260222": 55
    }
  },
  {
    "path": "src/main/java/moneytracker/transaction/TransactionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Manages the in-memory transaction list. It contains an ArrayList that stores"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * individual \u003ccode\u003eTransaction\u003c/code\u003e objects and methods to perform operations"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * such as adding and deleting transactions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class TransactionList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private ArrayList\u003cTransaction\u003e transactions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private final ArrayList\u003cInteger\u003e searchResultIndexes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private boolean isInitialized \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes an empty \u003ccode\u003eTransactionList\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public TransactionList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Initializes a \u003ccode\u003eTransactionList\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transactions List of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public TransactionList(ArrayList\u003cTransaction\u003e transactions) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.transactions \u003d transactions;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets a \u003ccode\u003eTransaction\u003c/code\u003e object from the \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param index Index of \u003ccode\u003eTransaction\u003c/code\u003e in the \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eTransaction\u003c/code\u003e object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Transaction getTransaction(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return transactions.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Adds a transaction to the \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param transaction \u003ccode\u003eTransaction\u003c/code\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void addTransaction(Transaction transaction, CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String category;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (transaction instanceof Income) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            category \u003d ((Income) transaction).getIncomeCategory();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            type \u003d \"INCOME\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories.checkIfCategoryExists(category, type);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            category \u003d ((Expense) transaction).getExpenseCategory();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            type \u003d \"EXPENSE\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (categories.checkIfCategoryExists(category, type)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            transactions.add(transaction);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"The category \\\"\" + category + \"\\\" does not exist.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Remove a \u003ccode\u003eTransaction\u003c/code\u003e object from the \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param index Index of a \u003ccode\u003eTransaction\u003c/code\u003e in \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws MoneyTrackerException If index is invalid."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void removeTransaction(int index) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            transactions.remove(transactions.get(index));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new MoneyTrackerException(\"Invalid index\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the size of a \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Size of a \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return transactions.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the status of whether the list command has been used."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public boolean getIsInitialized() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return isInitialized;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Sets the status that the list command has just been used."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void setIsInitialized(boolean isInitialized) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.isInitialized \u003d isInitialized;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Adds index for a particular transaction listed by the list command."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param searchResultIndex Index of category listed by the list command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void addSearchResultIndex(int searchResultIndex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        searchResultIndexes.add(searchResultIndex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Clears the indexes from the list command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void clearSearchResultIndexes() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        searchResultIndexes.clear();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the indexes from the list command."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public ArrayList\u003cInteger\u003e getSearchResultIndexes() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return searchResultIndexes;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the index for a particular transaction listed by the list command."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public int getSearchResultIndex(int resultIndex) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return searchResultIndexes.get(resultIndex);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Clears the \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void clearTransactions() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        transactions.clear();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Updates the category name of \u003ccode\u003eTransaction\u003c/code\u003e objects in the \u003ccode\u003eTransactionList\u003c/code\u003e."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param currentName Current category name of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param newName New category name of \u003ccode\u003eTransaction\u003c/code\u003e objects."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void updateTransactionsCategory(String currentName, String newName) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (int i \u003d 0; i \u003c transactions.size(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Transaction transaction \u003d transactions.get(i);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (transaction instanceof Income \u0026\u0026 ((Income) transaction).getIncomeCategory().equals(currentName)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ((Income) transaction).setIncomeCategory(newName);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (transaction instanceof Expense \u0026\u0026 ((Expense) transaction).getExpenseCategory().equals(currentName)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ((Expense) transaction).setExpenseCategory(newName);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 26,
      "e0260222": 128
    }
  },
  {
    "path": "src/main/java/moneytracker/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.Income;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.Transaction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.transaction.TransactionList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Contains methods that interacts with the users such as obtaining commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * from user input and displaying messages to the users."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static final String LINE \u003d \"____________________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static final String INDENT \u003d \"   \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets the input stream from the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Input stream from the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.print(\"You:  \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String logo \u003d \" __  __                          _______             _             \" + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"|  \\\\/  |                        |__   __|           | |            \" + System.lineSeparator()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"| \\\\  / | ___  _ __   ___ _   _     | |_ __ __ _  ___| | _____ _ __ \" + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"| |\\\\/| |/ _ \\\\| \u0027_ \\\\ / _ \\\\ | | |    | | \u0027__/ _` |/ __| |/ / _ \\\\ \u0027__|\" + System.lineSeparator()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"| |  | | (_) | | | |  __/ |_| |    | | | | (_| | (__|   \u003c  __/ |   \" + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"|_|  |_|\\\\___/|_| |_|\\\\___|\\\\__, |    |_|_|  \\\\__,_|\\\\___|_|\\\\_\\\\___|_|   \" + System.lineSeparator()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"                          __/ |                                    \" + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"                         |___/                                     \" + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Hello! What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printAddedTransaction(TransactionList transactions) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Transaction transactionToPrint \u003d transactions.getTransaction(transactions.getSize() - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactionToPrint instanceof Income) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Got it! I have added this income:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (transactionToPrint instanceof Expense) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Got it! I have added this expense:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new MoneyTrackerException(\"The transaction type is invalid\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(transactionToPrint.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Now you have \" + transactions.getSize() + \" transactions in your list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printAddCategory(CategoryList categories) throws MoneyTrackerException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Category categoryToPrint \u003d categories.getCategory(categories.getSize() - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (categoryToPrint.getType().equals(\"INCOME\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Got it! I have added this income category:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (categoryToPrint.getType().equals(\"EXPENSE\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Got it! I have added this expense category:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new MoneyTrackerException(\"The category type is invalid\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(categoryToPrint);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Now you have \" + categories.getSize() + \" categories in your list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printRemoveCategory(int size, String description, String type) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Noted! I have removed this \" + type + \": \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" categories in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printEditCategory(String oldDescription, String newDescription, String type) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Noted! I have edited this \" + type + \": \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"From \" + oldDescription + \" to \" + newDescription);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"OOPS!! \" + errorMessage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Please refer this online user guide:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"https://ay2021s1-tic4001-2.github.io/tp/UserGuide.html\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printClearConfirmation() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Are you sure you want to clear all data? Y / N\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printClearAllData(String confirmation) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (confirmation.equals(\"Y\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Noted! I have cleared all data.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else if (confirmation.equals(\"N\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Noted! Your data is untouched.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Sorry, please enter \\\"Y\\\" or \\\"N\\\" only\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printIndentation() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.print(INDENT);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListTransaction(TransactionList transactions) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactions.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your transactions:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                printIndentation();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                System.out.println((i + 1) + \". \" + transactions.getTransaction(i).toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printRemoveTransaction(int size, String description, String type) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Noted! I have removed this \" + type + \": \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(description);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" transactions in the list.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printFilteredTransactions(TransactionList transactions) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        ArrayList\u003cInteger\u003e searchResultIndexes \u003d transactions.getSearchResultIndexes();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c searchResultIndexes.size(); i++) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                printIndentation();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                System.out.println((i + 1) + \". \" + transactions.getTransaction(searchResultIndexes.get(i)).toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListTransactionExpenseOnly(TransactionList transactions) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.setIsInitialized(true);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactions.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your expenses:\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Transaction parentRecord \u003d transactions.getTransaction(i);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (parentRecord instanceof Expense) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    transactions.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredTransactions(transactions);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListTransactionIncomeOnly(TransactionList transactions) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.setIsInitialized(true);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactions.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your incomes:\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Transaction parentRecord \u003d transactions.getTransaction(i);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (parentRecord instanceof Income) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    transactions.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredTransactions(transactions);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListTransactionMonthOnly(TransactionList transactions, String listMonthName) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.setIsInitialized(true);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactions.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your transactions for \" + listMonthName + \" :\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (transactions.getTransaction(i).setMonth().equals(listMonthName)) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    transactions.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredTransactions(transactions);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListTransactionIncomeByMonth(TransactionList transactions, String listMonthName) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.setIsInitialized(true);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactions.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your income records for \" + listMonthName + \" :\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Transaction parentRecord \u003d transactions.getTransaction(i);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (parentRecord instanceof Income \u0026 transactions.getTransaction(i).setMonth().equals(listMonthName)) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    transactions.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredTransactions(transactions);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListTransactionExpenseByMonth(TransactionList transactions, String listMonthName) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.setIsInitialized(true);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        transactions.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (transactions.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your expense records for \" + listMonthName + \" :\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c transactions.getSize(); i++) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Transaction parentRecord \u003d transactions.getTransaction(i);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (parentRecord instanceof Expense \u0026 transactions.getTransaction(i).setMonth().equals(listMonthName)) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    transactions.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredTransactions(transactions);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private void printFilteredCategories(CategoryList categories) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        ArrayList\u003cInteger\u003e searchResultIndexes \u003d categories.getSearchResultIndexes();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c searchResultIndexes.size(); i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                printIndentation();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                System.out.println((i + 1) + \". \" + categories.getCategory(searchResultIndexes.get(i)).toString());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListCategory(CategoryList categories) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (categories.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your categories:\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c categories.getSize(); i++) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                printIndentation();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                System.out.println((i + 1) + \". \" + categories.getCategory(i).toString());"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListCategoryExpenseOnly(CategoryList categories) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        categories.setIsInitialized(true);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        categories.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (categories.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your expenses categories:\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c categories.getSize(); i++) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (categories.getCategory(i).getType().equals(\"EXPENSE\")) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    categories.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredCategories(categories);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void printListCategoryIncomeOnly(CategoryList categories) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        categories.setIsInitialized(true);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        categories.clearSearchResultIndexes();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (categories.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Sorry, there is no record in your list.\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            System.out.println(\"Here are your income categories:\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c categories.getSize(); i++) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (categories.getCategory(i).getType().equals(\"INCOME\")) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    categories.addSearchResultIndex(i);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printFilteredCategories(categories);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 236,
      "e0260222": 85
    }
  },
  {
    "path": "src/test/java/moneytracker/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.transaction.Transaction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Parser class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createIncomeCategory method with valid input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateIncomeCategory() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory \u003d Parser.createIncomeCategory(\"addcati salary\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[I] SALARY\", testCategory.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createIncomeCategory method with incomplete input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateIncomeCategoryWithMissingValue() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createIncomeCategory(\"addcati\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The income category name is missing.\", errorMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createExpenseCategory method with valid input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateExpenseCategory() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory \u003d Parser.createExpenseCategory(\"addcate food\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[E] FOOD\", testCategory.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createExpenseCategory method with incomplete input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateExpenseCategoryWithMissingValue() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createExpenseCategory(\"addcate\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The expense category name is missing.\", errorMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createIncome method with valid input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateIncome() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Transaction testIncome \u003d Parser.createIncome(\"addi /a5000 /cSalary /d2020-12-25 /e$1000 bonus!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[I] SALARY $5000.00 on 25 Dec 2020 ($1000 bonus!)\", testIncome.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createIncome method with incomplete input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateIncomeWithMissingValue() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createIncome(\"addi /cSalary /d2020-12-25 /e$1000 bonus!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The amount parameter is missing.\", errorMessage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createIncome(\"addi /a5000 /d2020-12-25 /e$1000 bonus!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The income category parameter is missing.\", errorMessage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createIncome method with invalid input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateIncomeWithInvalidValue() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createIncome(\"addi /aWEIRD /cSalary /d2020-12-25 /e$1000 bonus!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The amount must be a decimal value. E.g. 30.50\", errorMessage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createIncome(\"addi /a5000 /cSalary /d20201225 /e$1000 bonus!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"Date should be in yyyy-MM-dd format. E.g. 2020-12-25\", errorMessage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createExpense method with valid input."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateExpense() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Transaction testExpense \u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                Parser.createExpense(\"adde /a58.75 /cfood /d2020-12-25 /eExpensive dinner!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[E] FOOD $58.75 on 25 Dec 2020 (Expensive dinner!)\", testExpense.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createExpense method with incomplete input."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateExpenseWithMissingValue() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createExpense(\"adde /cfood /d2020-12-25 /eExpensive dinner!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The amount parameter is missing.\", errorMessage);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createExpense(\"adde /a58.75 /d2020-12-25 /eExpensive dinner!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The expense category parameter is missing.\", errorMessage);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the createIncome method with invalid input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCreateExpenseWithInvalidValue() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createExpense(\"adde /aWEIRD /cfood /d2020-12-25 /eExpensive dinner!\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The amount must be a decimal value. E.g. 30.50\", errorMessage);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.createExpense(\"adde /a58.75 /cfood /d20201225 /eExpensive dinner!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"Date should be in yyyy-MM-dd format. E.g. 2020-12-25\", errorMessage);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the getTransactionIndex method with valid input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetTransactionIndex() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(6, Parser.getDeleteIndex(\"delete 7\"));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the getTransactionIndex method with incomplete input."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetTransactionIndexWithMissingValue() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.getDeleteIndex(\"delete\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The index is missing.\", errorMessage);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the getTransactionIndex method with invalid values."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetTransactionIndexWithInvalidValue() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.getDeleteIndex(\"delete WEIRD\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The index is invalid.\", errorMessage);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the getEditParameters method with valid input."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test void testGetEditParameters() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String[] testEditParameters \u003d Parser.getEditParameters(\"editcat 1 /ndividend\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"1\", testEditParameters[0]);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"dividend\", testEditParameters[1]);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the getEditParameters method with incomplete input."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test void testGetEditParametersWithMissingValue() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.getEditParameters(\"editcat\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"The index is missing.\", errorMessage);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 217,
      "-": 7
    }
  },
  {
    "path": "src/test/java/moneytracker/transaction/CategoryListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for CategoryList class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class CategoryListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the exception handling for duplicated \u003ccode\u003eCategory\u003c/code\u003e objects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testAddDuplicateCategory() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        CategoryList categories \u003d new CategoryList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory \u003d new Category(\"SALARY\", \"INCOME\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory2 \u003d new Category(\"SALARY\", \"INCOME\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories.addCategory(testCategory);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            categories.addCategory(testCategory2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            errorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"This category already exists.\", errorMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the checkIfCategoryExists method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testCheckIfCategoryExists() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        CategoryList categories \u003d new CategoryList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory \u003d new Category(\"SALARY\", \"INCOME\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory2 \u003d new Category(\"FOOD\", \"EXPENSE\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.addCategory(testCategory);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        categories.addCategory(testCategory2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertTrue(categories.checkIfCategoryExists(\"SALARY\", \"INCOME\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertTrue(categories.checkIfCategoryExists(\"FOOD\", \"EXPENSE\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertFalse(categories.checkIfCategoryExists(\"WEIRD\", \"ITEM\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertFalse(categories.checkIfCategoryExists(\"SALARY\", \"EXPENSE\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertFalse(categories.checkIfCategoryExists(\"FOOD\", \"INCOME\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 48
    }
  },
  {
    "path": "src/test/java/moneytracker/transaction/CategoryTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Category class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class CategoryTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the toString override for \u003ccode\u003eIncome\u003c/code\u003e object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testIncomeToString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory \u003d new Category(\"SALARY\", \"INCOME\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[I] SALARY\", testCategory.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Tests the toString override for \u003ccode\u003eExpense\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testExpenseToString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Category testCategory \u003d new Category(\"FOOD\", \"EXPENSE\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[E] FOOD\", testCategory.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 28
    }
  },
  {
    "path": "src/test/java/moneytracker/transaction/ExpenseTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Expense class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ExpenseTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testToString() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Transaction testExpense \u003d new Expense(58.75, \"Expensive dinner\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                \"2020-12-25\", \"FOOD\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[E] FOOD $58.75 on 25 Dec 2020 (Expensive dinner)\", testExpense.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 18
    }
  },
  {
    "path": "src/test/java/moneytracker/transaction/IncomeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Income class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class IncomeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testToString() throws MoneyTrackerException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Transaction testIncome \u003d new Income(5000, \"$1000 bonus!\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                \"2020-12-25\", \"SALARY\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[I] SALARY $5000.00 on 25 Dec 2020 ($1000 bonus!)\", testIncome.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 18
    }
  },
  {
    "path": "src/test/java/moneytracker/transaction/TransactionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "package moneytracker.transaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import moneytracker.exception.MoneyTrackerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "class TransactionTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private Transaction testExpense1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            testExpense1 \u003d new Expense(100.0, \"Expensive dinner\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    \"2020-11-25\", \"FOOD\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (MoneyTrackerException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    void getAmount() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        assertEquals(\"100.0\", testExpense1.getAmount());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        assertEquals(\"Expensive dinner\", testExpense1.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    void getDate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        assertEquals(\"2020-11-25\", testExpense1.getDate());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 36
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "e0260222": 1
    }
  }
]
